{"version":3,"file":"ngx-widget-grid.js.map","sources":["ng://ngx-widget-grid/lib/models/CellSize.model.ts","ng://ngx-widget-grid/lib/models/Grid.model.ts","ng://ngx-widget-grid/lib/models/Rectangle.model.ts","ng://ngx-widget-grid/lib/models/WidgetConfig.model.ts","ng://ngx-widget-grid/lib/Utils.ts","ng://ngx-widget-grid/lib/components/widget/widget.component.ts","ng://ngx-widget-grid/lib/models/Cell.model.ts","ng://ngx-widget-grid/lib/models/GridRenderer.model.ts","ng://ngx-widget-grid/lib/components/grid/grid.component.ts","ng://ngx-widget-grid/lib/components/gridOverlay/gridOverlay.component.ts","ng://ngx-widget-grid/lib/models/PathIterator.model.ts","ng://ngx-widget-grid/lib/directives/widgetMover.directive.ts","ng://ngx-widget-grid/lib/directives/widgetResizer.directive.ts","ng://ngx-widget-grid/lib/ngx-widget-grid.module.ts"],"sourcesContent":["export class CellSize {\r\n  private _height = 0;\r\n  private _width = 0;\r\n\r\n  constructor(rowCount: number, columnCount: number) {\r\n    this._height = rowCount ? 100 / rowCount : 0;\r\n    this._width = columnCount ? 100 / columnCount : 0;\r\n  };\r\n\r\n  get height() {\r\n    return this._height;\r\n  }\r\n\r\n  get width() {\r\n    return this._width;\r\n  }\r\n}\r\n","import { CellSize } from './CellSize.model';\r\nimport { WidgetConfig } from './WidgetConfig.model';\r\n\r\nexport class Grid {\r\n  private _widgets: WidgetConfig[] = [];\r\n  private _rows = 3;\r\n  private _columns = 3;\r\n  private _cellSize: CellSize;\r\n\r\n  constructor(rows?: number, columns?: number) {\r\n    if (+rows) {\r\n      this._rows = +rows;\r\n    }\r\n    if (+columns) {\r\n      this._columns = +columns;\r\n    }\r\n    this._cellSize = new CellSize(this._rows, this._columns);\r\n  }\r\n\r\n  get widgets() {\r\n    return this._widgets;\r\n  }\r\n\r\n  get rows() {\r\n    return this._rows;\r\n  }\r\n\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  get cellSize() {\r\n    return this._cellSize;\r\n  }\r\n\r\n  add(widget: WidgetConfig) {\r\n    this._widgets.push(widget);\r\n  }\r\n\r\n  remove(widget: WidgetConfig) {\r\n    const widgetIndex = this._widgets.indexOf(widget);\r\n    if (widgetIndex > -1) {\r\n      this._widgets.splice(widgetIndex, 1);\r\n    }\r\n  }\r\n\r\n  removeAll() {\r\n    this._widgets.splice(0);\r\n  }\r\n\r\n  hasWidget(widget: WidgetConfig) {\r\n    const widgetIndex = this._widgets.indexOf(widget);\r\n    return widgetIndex > -1;\r\n  }\r\n\r\n  resize(rows: number, columns: number) {\r\n    columns = +columns || 0;\r\n    rows = +rows || 0;\r\n\r\n    if (columns > 0 && rows > 0 && columns !== this._columns || rows !== this._rows) {\r\n      this._columns = columns;\r\n      this._rows = rows;\r\n      this._cellSize = new CellSize(this._rows, this._columns);\r\n    }\r\n  }\r\n}\r\n","export interface IRectangle {\r\n  top?: number;\r\n  left?: number;\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport class Rectangle implements IRectangle {\r\n  public top = 0;\r\n  public left = 0;\r\n  public width = 0;\r\n  public height = 0;\r\n\r\n\r\n  constructor(obj?: IRectangle) {\r\n    if (obj) {\r\n      this.top = +obj.top || 0;\r\n      this.left = +obj.left || 0;\r\n      this.width = +obj.width || 0;\r\n      this.height = +obj.height || 0;\r\n    }\r\n  }\r\n\r\n  public get bottom(): number {\r\n    return this.top + this.height - 1;\r\n  }\r\n\r\n  public get right(): number {\r\n    return this.left + this.width - 1;\r\n  }\r\n\r\n  getSurfaceArea(): number {\r\n    return this.height * this.width;\r\n  }\r\n}\r\n","import { Rectangle } from './Rectangle.model';\r\n\r\nexport class WidgetConfig {\r\n  static widgetCount = 0;\r\n  public id: string;\r\n  private _position: Rectangle = new Rectangle();\r\n\r\n  constructor(rect?: Rectangle) {\r\n    this.id = this.generateUID();\r\n    if (rect) {\r\n      this.position = rect;\r\n    }\r\n  }\r\n\r\n  public get position(): Rectangle {\r\n    return this._position;\r\n  }\r\n\r\n  public set position(gridArea: Rectangle) {\r\n    this._position.top = +gridArea.top ? +gridArea.top : 0;\r\n    this._position.left = +gridArea.left ? +gridArea.left : 0;\r\n    this._position.width = +gridArea.width ? +gridArea.width : 0;\r\n    this._position.height = +gridArea.height ? +gridArea.height : 0;\r\n  }\r\n\r\n  public generateUID() {\r\n    return 'ngxDashboardWidget-' + ++WidgetConfig.widgetCount;\r\n  }\r\n}\r\n","export class Utils {\r\n  static isNumber(val: any): boolean {\r\n    return typeof val === 'number';\r\n  }\r\n\r\n  static isDefined(val: any): boolean {\r\n    return val !== undefined;\r\n  }\r\n\r\n  static isObject(val: any): boolean {\r\n    return typeof val === 'object';\r\n  }\r\n\r\n}\r\n\r\nexport enum RESIZE_DIRECTIONS {\r\n  topLeft = 'NW',\r\n  top = 'N',\r\n  topRight = 'NE',\r\n  right = 'E',\r\n  bottomRight = 'SE',\r\n  bottom = 'S',\r\n  bottomLeft = 'SW',\r\n  left = 'W'\r\n}\r\n\r\nexport const ALL_DIRECTIONS: RESIZE_DIRECTIONS[] = [\r\n  RESIZE_DIRECTIONS.bottom,\r\n  RESIZE_DIRECTIONS.left,\r\n  RESIZE_DIRECTIONS.right,\r\n  RESIZE_DIRECTIONS.top,\r\n  RESIZE_DIRECTIONS.bottomLeft,\r\n  RESIZE_DIRECTIONS.bottomRight,\r\n  RESIZE_DIRECTIONS.topLeft,\r\n  RESIZE_DIRECTIONS.topRight\r\n];\r\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\r\nimport { WidgetConfig } from '../../models/WidgetConfig.model';\r\nimport { Rectangle } from '../../models/Rectangle.model';\r\nimport { ALL_DIRECTIONS, RESIZE_DIRECTIONS } from '../../Utils';\r\n\r\n@Component({\r\n             selector: 'ngx-widget',\r\n             styleUrls: ['./widget.component.scss'],\r\n             templateUrl: './widget.component.html',\r\n             changeDetection: ChangeDetectionStrategy.OnPush\r\n           })\r\nexport class NgxWidgetComponent {\r\n\r\n  @Input() swapOnMove = false;\r\n  @Output()\r\n  positionChange: EventEmitter<Rectangle> = new EventEmitter();\r\n  @Input() movable = false;\r\n  public allDirections = RESIZE_DIRECTIONS;\r\n  public isTopResizable = false;\r\n  public isRightResizable = false;\r\n  public isBottomResizable = false;\r\n  public isLeftResizable = false;\r\n  public isTopRightResizable = false;\r\n  public isTopLeftResizable = false;\r\n  public isBottomRightResizable = false;\r\n  public isBottomLeftResizable = false;\r\n  public widgetConfig: WidgetConfig;\r\n  public _position: Rectangle;\r\n  public _resizable = false;\r\n  public _resizeDirections: RESIZE_DIRECTIONS[] = ALL_DIRECTIONS;\r\n\r\n  constructor(private elRef: ElementRef) {\r\n    this.widgetConfig = new WidgetConfig(this.position);\r\n  }\r\n\r\n  get position(): Rectangle {\r\n    return this._position;\r\n  }\r\n\r\n  @Input()\r\n  set position(position: Rectangle) {\r\n    this._position = position;\r\n    this.widgetConfig.position = position;\r\n    this.positionChange.emit(position);\r\n  }\r\n\r\n  get resizable() {\r\n    return this._resizable;\r\n  }\r\n\r\n  @Input()\r\n  set resizable(resizable: boolean) {\r\n    this._resizable = resizable;\r\n    if (resizable) {\r\n      this.setResizeDirections();\r\n    }\r\n  }\r\n\r\n  get resizeDirections() {\r\n    return this._resizeDirections;\r\n  }\r\n\r\n  @Input()\r\n  set resizeDirections(dirs: RESIZE_DIRECTIONS[]) {\r\n    this._resizeDirections = <RESIZE_DIRECTIONS[]>dirs.filter((dir: RESIZE_DIRECTIONS) => {\r\n      return ALL_DIRECTIONS.indexOf(<RESIZE_DIRECTIONS>(<string>dir).toUpperCase()) !== -1;\r\n    });\r\n    this.setResizeDirections();\r\n  }\r\n\r\n  setResizeDirections() {\r\n    this.isTopResizable = false;\r\n    this.isRightResizable = false;\r\n    this.isBottomResizable = false;\r\n    this.isLeftResizable = false;\r\n    this.isTopRightResizable = false;\r\n    this.isTopLeftResizable = false;\r\n    this.isBottomRightResizable = false;\r\n    this.isBottomLeftResizable = false;\r\n    this._resizeDirections.forEach((dir) => {\r\n      switch (dir) {\r\n        case RESIZE_DIRECTIONS.top:\r\n          this.isTopResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.left:\r\n          this.isLeftResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.bottom:\r\n          this.isBottomResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.right:\r\n          this.isRightResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.topLeft:\r\n          this.isTopLeftResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.topRight:\r\n          this.isTopRightResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.bottomLeft:\r\n          this.isBottomLeftResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.bottomRight:\r\n          this.isBottomRightResizable = true;\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  getConfig(): WidgetConfig {\r\n    return this.widgetConfig;\r\n  }\r\n\r\n  getEl(): ElementRef {\r\n    return this.elRef;\r\n  }\r\n}\r\n","export class Cell {\r\n    private _top: number;\r\n    private _left: number;\r\n\r\n    constructor(top: number, left: number) {\r\n        this._top = top;\r\n        this._left = left;\r\n    }\r\n\r\n    get top() {\r\n        return this._top;\r\n    }\r\n\r\n    get left() {\r\n        return this._left;\r\n    }\r\n}\r\n","import { Grid } from './Grid.model';\r\nimport { Cell } from './Cell.model';\r\nimport { Utils } from '../Utils';\r\nimport { Rectangle } from './Rectangle.model';\r\nimport { WidgetConfig } from './WidgetConfig.model';\r\n\r\nexport class GridRenderer {\r\n  public positions: { [key: string]: Rectangle } = {};\r\n  public cachedNextPosition: Rectangle;\r\n  public obstructions: string[] = [];\r\n  public _grid: Grid;\r\n\r\n  constructor(grid: Grid) {\r\n    this.grid = grid || new Grid();\r\n\r\n  }\r\n\r\n  get grid() {\r\n    return this._grid;\r\n  }\r\n\r\n  set grid(grid: Grid) {\r\n    this._grid = grid;\r\n    this.positions = {};\r\n    this.cachedNextPosition = undefined;\r\n    this.obstructions = [];\r\n    for (let i = 0; i < grid.rows * grid.columns; i++) {\r\n      this.obstructions[i] = null;\r\n    }\r\n  }\r\n\r\n  rasterizeCoords(left: number, top: number, gridWidth: number, gridHeight: number): Cell {\r\n    left = Math.min(Math.max(left, 0), gridWidth - 1);\r\n    top = Math.min(Math.max(top, 0), gridHeight - 1);\r\n\r\n    const x = Math.floor(top / gridHeight * this.grid.rows) + 1;\r\n    const y = Math.floor(left / gridWidth * this.grid.columns) + 1;\r\n    return new Cell(x, y);\r\n  }\r\n\r\n  getWidgetIdAt(i: number, j: number) {\r\n    for (const widgetId in this.positions) {\r\n      if (this.positions.hasOwnProperty(widgetId)) {\r\n        const position = this.positions[widgetId];\r\n\r\n        if (position.top <= i && i <= (position.top + position.height - 1) &&\r\n          position.left <= j && j <= (position.left + position.width - 1)) {\r\n          return widgetId;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getWidgetPosition(widgetId: string) {\r\n    return this.positions[widgetId];\r\n  }\r\n\r\n  setWidgetPosition(widgetId: string, newPosition: Rectangle, swappingPositions: boolean) {\r\n    const currPosition = this.positions[widgetId];\r\n    if (currPosition && !swappingPositions) {\r\n      this.setObstructionValues(currPosition, null);\r\n    }\r\n\r\n    newPosition = new Rectangle({\r\n                                  top: Utils.isNumber(newPosition.top) ? newPosition.top : currPosition.top,\r\n                                  left: Utils.isNumber(newPosition.left) ? newPosition.left : currPosition.left,\r\n                                  width: Utils.isNumber(newPosition.width) ? newPosition.width : currPosition.width,\r\n                                  height: Utils.isNumber(newPosition.height) ? newPosition.height : currPosition.height\r\n                                });\r\n    this.positions[widgetId] = newPosition;\r\n\r\n    this.setObstructionValues(this.positions[widgetId], widgetId);\r\n    this.cachedNextPosition = undefined;\r\n  }\r\n\r\n  hasSpaceLeft() {\r\n    for (const obstruction of this.obstructions) {\r\n      if (obstruction === null) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getNextPosition(): Rectangle {\r\n    if (this.cachedNextPosition !== undefined) {\r\n      return this.cachedNextPosition;\r\n    }\r\n\r\n    if (!this.hasSpaceLeft()) {\r\n      return null;\r\n    }\r\n\r\n    const maxPosition: Rectangle = this.findLargestEmptyArea();\r\n    this.cachedNextPosition = maxPosition;\r\n    return maxPosition;\r\n  }\r\n\r\n  isObstructed(i: number, j: number, excludedArea?: Rectangle) {\r\n    // obstructed if (i, j) exceeds the grid's regular non-expanding boundaries\r\n    if (i < 1 || j < 1 || j > this.grid.columns || i > this.grid.rows) {\r\n      return true;\r\n    }\r\n    const bottom = excludedArea && excludedArea.top + excludedArea.height - 1;\r\n    const right = excludedArea && excludedArea.left + excludedArea.width - 1;\r\n    // pass if (i, j) is within the excluded area, if any\r\n    if (excludedArea &&\r\n      excludedArea.top <= i &&\r\n      i <= bottom &&\r\n      excludedArea.left <= j &&\r\n      j <= right) {\r\n      return false;\r\n    }\r\n\r\n    return this._isObstructed(i, j);\r\n  }\r\n\r\n  public _isObstructed(i: number, j: number) {\r\n    return this.obstructions[(i - 1) * this.grid.columns + (j - 1)] !== null;\r\n  }\r\n\r\n  isAreaObstructed(area: Rectangle,\r\n                   options?: {\r\n                     excludedArea?: Rectangle;\r\n                     fromBottom?: boolean;\r\n                     fromRight?: boolean;\r\n                   }) {\r\n    if (!area) {\r\n      return false;\r\n    }\r\n    options = Utils.isObject(options) ? options : {};\r\n\r\n    const top = area.top;\r\n    const left = area.left;\r\n    const bottom = area.bottom || area.top + area.height - 1;\r\n    const right = area.right || area.left + area.width - 1;\r\n\r\n    if (!Utils.isNumber(top) || !Utils.isNumber(left) || !Utils.isNumber(bottom) || !Utils.isNumber(right)) {\r\n      return false;\r\n    }\r\n\r\n    const verticalStart = options.fromBottom ? bottom : top;\r\n    const verticalStep = options.fromBottom ? -1 : 1;\r\n    const verticalEnd = (options.fromBottom ? top : bottom) + verticalStep;\r\n    const horizontalStart = options.fromRight ? right : left;\r\n    const horizontalStep = options.fromRight ? -1 : 1;\r\n    const horizontalEnd = (options.fromRight ? left : right) + horizontalStep;\r\n\r\n    for (let i = verticalStart; i !== verticalEnd; i += verticalStep) {\r\n      for (let j = horizontalStart; j !== horizontalEnd; j += horizontalStep) {\r\n        if (this.isObstructed(i, j, options.excludedArea)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getStyle(widgetId: string): {\r\n    display: string;\r\n  } | {\r\n    top: string;\r\n    height: string;\r\n    left: string;\r\n    width: string;\r\n  } {\r\n    const render = this.positions[widgetId];\r\n\r\n    if (!render) {\r\n      return {display: 'none'};\r\n    }\r\n\r\n    return {\r\n      top: ((render.top - 1) * this.grid.cellSize.height).toString() + '%',\r\n      height: (render.height * this.grid.cellSize.height).toString() + '%',\r\n      left: ((render.left - 1) * this.grid.cellSize.width).toString() + '%',\r\n      width: (render.width * this.grid.cellSize.width).toString() + '%'\r\n    };\r\n  }\r\n\r\n  setObstructionValues(area: Rectangle, value: string) {\r\n    for (let i = area.top - 1; i < area.top + area.height - 1; i++) {\r\n      for (let j = area.left - 1; j < area.left + area.width - 1; j++) {\r\n        this.obstructions[i * this.grid.columns + j] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  findLargestEmptyArea(): Rectangle {\r\n    let maxArea: Rectangle = null;\r\n    let currMaxArea: Rectangle = null;\r\n    let maxSurfaceArea = 0;\r\n    let currMaxSurfaceArea = 0;\r\n    for (let i = 1; i <= this.grid.rows; i++) {\r\n      for (let j = 1; j <= this.grid.columns; j++) {\r\n        if (this._isObstructed(i, j)) {\r\n          continue;\r\n        }\r\n\r\n        const currAreaLimit = (this.grid.rows - i + 1) * (this.grid.columns - j + 1);\r\n        if (currAreaLimit < maxSurfaceArea) {\r\n          break;\r\n        }\r\n\r\n        currMaxArea = this._findLargestEmptyAreaFrom(new Cell(i, j));\r\n        currMaxSurfaceArea = currMaxArea.getSurfaceArea();\r\n\r\n        if (currMaxSurfaceArea > maxSurfaceArea) {\r\n          maxSurfaceArea = currMaxSurfaceArea;\r\n          maxArea = currMaxArea;\r\n        }\r\n      }\r\n    }\r\n    return maxArea;\r\n  }\r\n\r\n  public _findLargestEmptyAreaFrom(start: Cell) {\r\n    if (!Utils.isDefined(this.grid) || !Utils.isNumber(this.grid.columns) || !Utils.isNumber(this.grid.rows)) {\r\n      return null;\r\n    }\r\n\r\n    let maxArea = null,\r\n      maxSurfaceArea = 0,\r\n      endColumn = this.grid.columns;\r\n    for (let i = start.top; i <= this.grid.rows; i++) {\r\n      for (let j = start.left; j <= endColumn; j++) {\r\n        if (this._isObstructed(i, j)) {\r\n          endColumn = j - 1;\r\n          continue;\r\n        }\r\n\r\n        const currHeight = (i - start.top + 1);\r\n        const currWidth = (j - start.left + 1);\r\n        const currSurfaceArea = currHeight * currWidth;\r\n\r\n        if (currSurfaceArea > maxSurfaceArea) {\r\n          maxSurfaceArea = currSurfaceArea;\r\n          maxArea = new Rectangle({\r\n                                    top: start.top,\r\n                                    left: start.left,\r\n                                    width: currWidth,\r\n                                    height: currHeight\r\n                                  });\r\n        }\r\n      }\r\n    }\r\n    return maxArea;\r\n  }\r\n\r\n  render(grid: Grid, emitWidgetPositionUpdated?: Function) {\r\n    this.grid = grid;\r\n    const widgets: WidgetConfig[] = this.grid && this.grid.widgets ? this.grid.widgets : [];\r\n    const unpositionedWidgets: WidgetConfig[] = [];\r\n    widgets.forEach((widget: WidgetConfig) => {\r\n      const position: Rectangle = widget.position;\r\n      if (position.width * position.height === 0 ||\r\n        this.isAreaObstructed(position)) {\r\n        unpositionedWidgets.push(widget);\r\n      } else {\r\n        this.setWidgetPosition(widget.id, position, false);\r\n      }\r\n    });\r\n\r\n    unpositionedWidgets.forEach((widget: WidgetConfig) => {\r\n      const nextPosition = this.getNextPosition();\r\n      if (nextPosition !== null) {\r\n        widget.position = nextPosition;\r\n        this.setWidgetPosition(widget.id, nextPosition, false);\r\n      } else {\r\n        widget.position = new Rectangle();\r\n        this.setWidgetPosition(widget.id, new Rectangle(), false);\r\n      }\r\n      if (emitWidgetPositionUpdated) {\r\n        emitWidgetPositionUpdated(widget);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { Grid } from '../../models/Grid.model';\r\nimport { NgxWidgetComponent } from '../widget/widget.component';\r\nimport { GridRenderer } from '../../models/GridRenderer.model';\r\nimport { Cell } from '../../models/Cell.model';\r\nimport { WidgetConfig } from '../../models/WidgetConfig.model';\r\nimport { Rectangle } from '../../models/Rectangle.model';\r\nimport { WidgetPositionChange } from '../../models/widgetPositionChange.interface';\r\n\r\n@Component({\r\n             selector: 'ngx-widget-grid',\r\n             styleUrls: ['./grid.component.scss'],\r\n             templateUrl: './grid.component.html',\r\n             changeDetection: ChangeDetectionStrategy.OnPush\r\n           })\r\nexport class NgxWidgetGridComponent implements AfterViewInit {\r\n\r\n  @Input() showGrid = false;\r\n  @Output() public widgetPositionChange: EventEmitter<WidgetPositionChange> = new EventEmitter<WidgetPositionChange>();\r\n  @Output() public gridFull: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @ContentChildren(NgxWidgetComponent) public widgetComponents: QueryList<NgxWidgetComponent>;\r\n  public grid: Grid;\r\n  public gridRenderer: GridRenderer;\r\n  public highlightedArea: Rectangle;\r\n  public gridAlreadyFull = false;\r\n  public _rows: number;\r\n  public _columns: number;\r\n  public _highlightNextPosition = false;\r\n\r\n  constructor(private el: ElementRef,\r\n              private _changeDetector: ChangeDetectorRef,\r\n              private _renderer: Renderer2) {\r\n    this.grid = new Grid(this.rows, this.columns);\r\n    this.gridRenderer = new GridRenderer(this.grid);\r\n  }\r\n\r\n  get rows() {\r\n    return this._rows;\r\n  }\r\n\r\n  @Input()\r\n  set rows(rows) {\r\n    this._rows = rows;\r\n    this.updateGridSize();\r\n  }\r\n\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  @Input()\r\n  set columns(cols) {\r\n    this._columns = cols;\r\n    this.updateGridSize();\r\n  }\r\n\r\n  get highlightNextPosition(): boolean {\r\n    return this._highlightNextPosition;\r\n  }\r\n\r\n  @Input()\r\n  set highlightNextPosition(highlightNext: boolean) {\r\n    this._highlightNextPosition = highlightNext;\r\n    if (highlightNext) {\r\n      this.updateNextPositionHighlight();\r\n    } else {\r\n      this.resetHighlights();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.refreshWidgets();\r\n    this.widgetComponents.changes.subscribe(() => {\r\n      this.clearGrid();\r\n      this.refreshWidgets();\r\n    });\r\n  }\r\n\r\n  refreshWidgets() {\r\n    this.widgetComponents.forEach((widget: NgxWidgetComponent) => {\r\n      if (!this.hasWidget(widget)) {\r\n        this.addWidget(widget, true);\r\n      } else {\r\n      }\r\n    });\r\n    this.updateRendering();\r\n  }\r\n\r\n  hasWidget(widget: NgxWidgetComponent): boolean {\r\n    return this.grid.hasWidget(widget.getConfig());\r\n  }\r\n\r\n  addWidget(widget: NgxWidgetComponent, deferredRender?: boolean) {\r\n    this.grid.add(widget.getConfig());\r\n    if (!deferredRender) {\r\n      this.updateRendering();\r\n    }\r\n  }\r\n\r\n  clearGrid() {\r\n    this.grid.removeAll();\r\n  }\r\n\r\n  updateGridSize() {\r\n    const columns = this.columns;\r\n    const rows = this.rows;\r\n    if (this.grid.columns !== columns || this.grid.rows !== rows) {\r\n      this.grid.resize(rows, columns);\r\n      this.updateRendering();\r\n    }\r\n  }\r\n\r\n  updateRendering() {\r\n    this.gridRenderer.render(this.grid, this.emitUpdatePosition.bind(this));\r\n    this.updateNextPositionHighlight();\r\n    // TODO: retrieve all widgets and call their updateRendering\r\n    if (this.widgetComponents) {\r\n      this.widgetComponents.forEach((widget: NgxWidgetComponent) => {\r\n        this.updateWidget(widget, false);\r\n      });\r\n    }\r\n  }\r\n\r\n  getGridRectangle(): Rectangle {\r\n    const gridContainer = this.el.nativeElement;\r\n\r\n    // c.f. jQuery#offset: https://github.com/jquery/jquery/blob/2d715940b9b6fdeed005cd006c8bf63951cf7fb2/src/offset.js#L93-105\r\n    const rect = gridContainer.getBoundingClientRect();\r\n    if (rect.width || rect.height || gridContainer.getClientRects().length) {\r\n      const doc = gridContainer.ownerDocument;\r\n      const docElem = doc.documentElement;\r\n      return new Rectangle({\r\n                             top: rect.top + window.pageYOffset - docElem.clientTop,\r\n                             left: rect.left + window.pageXOffset - docElem.clientLeft,\r\n                             height: rect.height,\r\n                             width: rect.width\r\n                           });\r\n    }\r\n    return new Rectangle({top: 0, left: 0, height: 0, width: 0});\r\n  }\r\n\r\n  rasterizeCoords(x: number, y: number): Cell {\r\n    return this.gridRenderer.rasterizeCoords(x, y, this.el.nativeElement.clientWidth, this.el.nativeElement.clientHeight);\r\n  }\r\n\r\n  updateWidget(widget: NgxWidgetComponent, swappingWidgets: boolean) {\r\n    const config = widget.getConfig();\r\n    const newPosition = config.position;\r\n    const el: ElementRef = widget.getEl();\r\n    this.gridRenderer.setWidgetPosition(config.id, newPosition, swappingWidgets);\r\n    const widgetStyles = this.getWidgetStyle(widget);\r\n    for (const style in widgetStyles) {\r\n      if (widgetStyles.hasOwnProperty(style)) {\r\n        this._renderer.setStyle(el.nativeElement, style, widgetStyles[style]);\r\n      }\r\n    }\r\n    this.emitUpdatePosition(config);\r\n    this.assessAvailableGridSpace();\r\n  }\r\n\r\n  getWidgetPositionByWidgetId(widgetId: string) {\r\n    return this.gridRenderer.getWidgetPosition(widgetId);\r\n  }\r\n\r\n  getWidgetPosition(widget: NgxWidgetComponent) {\r\n    return this.getWidgetPositionByWidgetId(widget.getConfig().id);\r\n  }\r\n\r\n  getWidgetStyle(widget: NgxWidgetComponent) {\r\n    return this.gridRenderer.getStyle(widget.getConfig().id);\r\n  }\r\n\r\n  isPointObstructed(i: number, j: number) {\r\n    return this.gridRenderer ? this.gridRenderer.isObstructed(i, j) : true;\r\n  }\r\n\r\n  isAreaObstructed(area: Rectangle,\r\n                   options: {\r\n                     excludedArea?: Rectangle;\r\n                     fromBottom?: boolean;\r\n                     fromRight?: boolean;\r\n                   }): boolean {\r\n    return this.gridRenderer ? this.gridRenderer.isAreaObstructed(area, options) : true;\r\n  }\r\n\r\n  areaObstructor(area: Rectangle) {\r\n    return this.gridRenderer.obstructions[(area.top - 1) * this.grid.columns + (area.left - 1)];\r\n  }\r\n\r\n  highlightArea(area: Rectangle) {\r\n    if (area.top && area.left && area.height && area.width) {\r\n      setTimeout(() => {\r\n        this.highlightedArea = area;\r\n        this._changeDetector.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  updateNextPositionHighlight() {\r\n    if (this.highlightNextPosition) {\r\n      this.highlightedArea = this.gridRenderer.getNextPosition();\r\n    }\r\n  }\r\n\r\n  getNextPosition() {\r\n    return this.gridRenderer.getNextPosition();\r\n  }\r\n\r\n  getPositions() {\r\n    return this.grid.widgets;\r\n  }\r\n\r\n  resetHighlights() {\r\n    setTimeout(() => {\r\n      this.highlightedArea = null;\r\n      this._changeDetector.markForCheck();\r\n    });\r\n  }\r\n\r\n  emitUpdatePosition(widget: WidgetConfig) {\r\n    this.widgetPositionChange.emit({\r\n                                     index: this.getWidgetIndex(widget),\r\n                                     newPosition: new Rectangle(widget.position)\r\n                                   });\r\n  }\r\n\r\n  getWidgetIndex(widgetConfig: WidgetConfig) {\r\n    for (let i = this.grid.widgets.length - 1; i >= 0; i--) {\r\n      if (this.grid.widgets[i].id === widgetConfig.id) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  getWidgetById(widgetId: string): NgxWidgetComponent {\r\n    return this.widgetComponents.find(widgetCmp => {\r\n      return widgetCmp.getConfig().id === widgetId;\r\n    }) || null;\r\n  }\r\n\r\n  assessAvailableGridSpace() {\r\n    const gridHasSpaceLeft = this.gridRenderer.hasSpaceLeft();\r\n    if (this.gridAlreadyFull) {\r\n      if (gridHasSpaceLeft) {\r\n        this.gridFull.emit(false);\r\n        this.gridAlreadyFull = false;\r\n      } else {\r\n        /*No change to grid status. was and still is full*/\r\n      }\r\n    } else {\r\n      if (!gridHasSpaceLeft) {\r\n        this.gridFull.emit(true);\r\n        this.gridAlreadyFull = true;\r\n      } else {\r\n        /*No change to grid status. had and still has available space*/\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Utils } from '../../Utils';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\nimport { GridRenderer } from '../../models/GridRenderer.model';\r\nimport { Rectangle } from '../../models/Rectangle.model';\r\n\r\n@Component({\r\n             selector: 'ngx-grid-overlay',\r\n             styleUrls: ['./gridOverlay.component.scss'],\r\n             templateUrl: './gridOverlay.component.html',\r\n             changeDetection: ChangeDetectionStrategy.OnPush\r\n           })\r\nexport class NgxGridOverlayComponent {\r\n\r\n  public activeHighlight: any = null;\r\n  public gridRows: { y: SafeStyle; height: SafeStyle; }[] = [];\r\n  public gridCols: { x: SafeStyle; width: SafeStyle; }[] = [];\r\n  public _renderer: GridRenderer;\r\n  public _highlight?: Rectangle;\r\n  public _showGrid = false;\r\n\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n\r\n\r\n  get renderer(): GridRenderer {\r\n    return this._renderer;\r\n  }\r\n\r\n  @Input()\r\n  set renderer(renderer: GridRenderer) {\r\n    this._renderer = renderer;\r\n    if (Utils.isDefined(renderer)) {\r\n      this.updateGridLines(renderer, this.showGrid);\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set rows(rows: number) {\r\n    this.updateGridLines(this.renderer, this.showGrid);\r\n  }\r\n\r\n  @Input()\r\n  set cols(rows: number) {\r\n    this.updateGridLines(this.renderer, this.showGrid);\r\n  }\r\n\r\n\r\n  get highlight() {\r\n    return this._highlight;\r\n  }\r\n\r\n  @Input()\r\n  set highlight(highlight) {\r\n    this._highlight = highlight;\r\n    this.clearHighlight();\r\n    if (highlight) {\r\n      this.highlightArea(highlight, this.renderer);\r\n    }\r\n  }\r\n\r\n\r\n  get showGrid() {\r\n    return this._showGrid;\r\n  }\r\n\r\n  @Input()\r\n  set showGrid(showGrid: boolean) {\r\n    this._showGrid = showGrid;\r\n    this.updateGridLines(this.renderer, showGrid);\r\n  }\r\n\r\n  updateGridLines(renderer: GridRenderer, showGrid: boolean): void {\r\n    this.clearGridLines();\r\n    if (showGrid) {\r\n      this.showGridLines(renderer);\r\n    }\r\n  }\r\n\r\n  clearHighlight(): void {\r\n    this.activeHighlight = null;\r\n  }\r\n\r\n  clearGridLines(): void {\r\n    this.gridRows.splice(0);\r\n    this.gridCols.splice(0);\r\n  }\r\n\r\n  highlightArea(area: Rectangle, renderer: GridRenderer): void {\r\n    const cellSize = renderer.grid.cellSize;\r\n    const cellHeight = cellSize.height;\r\n    const cellWidth = cellSize.width;\r\n\r\n    this.activeHighlight = {\r\n      x: (area.left - 1) * cellWidth + '%',\r\n      y: (area.top - 1) * cellHeight + '%',\r\n      height: area.height * cellHeight + '%',\r\n      width: area.width * cellWidth + '%'\r\n    };\r\n    this.sanitizer.bypassSecurityTrustStyle(this.activeHighlight);\r\n  }\r\n\r\n  showGridLines(renderer: GridRenderer): void {\r\n    const cellHeight = renderer.grid.cellSize.height;\r\n    const cellWidth = renderer.grid.cellSize.width;\r\n    const height = cellHeight + '%';\r\n    const width = cellWidth + '%';\r\n    const rows = renderer.grid.rows;\r\n    const cols = renderer.grid.columns;\r\n    for (let i = 1; i < rows; i += 2) {\r\n      let y: string, h: string, row: { y: SafeStyle, height: SafeStyle };\r\n      y = (i * cellHeight) + '%';\r\n      h = 'calc(' + height + ' - 1px)';\r\n      row = {\r\n        y: this.sanitizer.bypassSecurityTrustStyle(y),\r\n        height: this.sanitizer.bypassSecurityTrustStyle(h)\r\n      };\r\n      this.gridRows.push(row);\r\n    }\r\n\r\n    for (let i = 1; i < cols; i += 2) {\r\n      let x: string, w: string, col: { x: SafeStyle, width: SafeStyle };\r\n      x = (i * cellWidth) + '%';\r\n      w = 'calc(' + width + ' - 1px)';\r\n      col = {\r\n        x: this.sanitizer.bypassSecurityTrustStyle(x),\r\n        width: this.sanitizer.bypassSecurityTrustStyle(w)\r\n      };\r\n      this.gridCols.push(col);\r\n    }\r\n  }\r\n}\r\n","import { Cell } from './Cell.model';\r\nimport { Rectangle } from './Rectangle.model';\r\n\r\nexport class PathIterator {\r\n  private _start: Rectangle;\r\n  private _heightDelta: number;\r\n  private _widthDelta: number;\r\n  private _steps: number;\r\n  private _currStep: number;\r\n  private _currPos: Cell = null;\r\n  private _nextPos: Cell = null;\r\n\r\n  constructor(start: Rectangle, end: Rectangle) {\r\n    if (!start) {\r\n      console.error('Start not present for Path Iterator');\r\n      return;\r\n    }\r\n    if (!end) {\r\n      console.error('End not present for Path Iterator');\r\n      return;\r\n    }\r\n    this._start = start;\r\n    this._heightDelta = end.top - start.top;\r\n    this._widthDelta = end.left - start.left;\r\n    this._steps = Math.max(Math.abs(this._heightDelta), Math.abs(this._widthDelta));\r\n    this._currStep = 0;\r\n    this._currPos = null;\r\n    this._nextPos = new Cell(start.top, start.left);\r\n  }\r\n\r\n  public next(): Cell {\r\n    this._currPos = this._nextPos;\r\n\r\n    if (this._currStep < this._steps) {\r\n      this._currStep++;\r\n      const currTopDelta = Math.round((this._currStep / this._steps) * this._heightDelta);\r\n      const currLeftDelta = Math.round((this._currStep / this._steps) * this._widthDelta);\r\n      this._nextPos = new Cell(this._start.top + currTopDelta, this._start.left + currLeftDelta);\r\n    } else {\r\n      this._nextPos = null;\r\n    }\r\n\r\n    return this._currPos;\r\n  }\r\n\r\n  public hasNext(): boolean {\r\n    return this._nextPos !== null;\r\n  }\r\n}\r\n","import { Directive, ElementRef, forwardRef, HostListener, Inject, Input, Renderer2 } from '@angular/core';\r\nimport { NgxWidgetGridComponent } from '../components/grid/grid.component';\r\nimport { Rectangle } from '../models/Rectangle.model';\r\nimport { NgxWidgetComponent } from '../components/widget/widget.component';\r\nimport { PathIterator } from '../models/PathIterator.model';\r\n\r\nexport interface RectanglePixels {\r\n  top: number;\r\n  left: number;\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\n@Directive({\r\n             selector: '[ngxWidgetMover]'\r\n           })\r\nexport class NgxWidgetMoverDirective {\r\n\r\n  public cellHeight: number;\r\n  public cellWidth: number;\r\n  public startRender: RectanglePixels;\r\n  public gridPositions: Rectangle;\r\n  public moverOffset: Rectangle;\r\n  public desiredPosition: any;\r\n  public startPosition: Rectangle;\r\n  public enableDrag: string = null;\r\n  private _onMoveListener = this.onMove.bind(this);\r\n  private _onUpListener = this.onUp.bind(this);\r\n\r\n  @Input()\r\n  public ngxWidgetMover = false;\r\n\r\n  constructor(private el: ElementRef,\r\n              private renderer: Renderer2,\r\n              @Inject(forwardRef(() => NgxWidgetGridComponent))\r\n              private gridCmp: NgxWidgetGridComponent,\r\n              @Inject(forwardRef(() => NgxWidgetComponent))\r\n              private widgetCmp: NgxWidgetComponent) {\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event'])\r\n  @HostListener('pointerdown', ['$event'])\r\n  onDown(event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.renderer.addClass(this.widgetCmp.getEl().nativeElement, 'wg-moving');\r\n    const widgetContainer = this.widgetCmp.getEl().nativeElement;\r\n\r\n    this.startPosition = this.gridCmp.getWidgetPosition(this.widgetCmp);\r\n\r\n    this.startRender = {\r\n      top: widgetContainer.offsetTop,\r\n      left: widgetContainer.offsetLeft,\r\n      height: widgetContainer.clientHeight,\r\n      width: widgetContainer.clientWidth\r\n    }; // pixel values\r\n\r\n    const eventOffsetX = event.offsetX || event.layerX;\r\n    const eventOffsetY = event.offsetY || event.layerY;\r\n\r\n    this.desiredPosition = {top: this.startRender.top, left: this.startRender.left};\r\n\r\n    this.moverOffset = new Rectangle({\r\n                                       top: eventOffsetY + this.el.nativeElement.offsetTop || 0,\r\n                                       left: eventOffsetX + this.el.nativeElement.offsetLeft || 0\r\n                                     });\r\n\r\n    this.gridPositions = this.gridCmp.getGridRectangle();\r\n    this.cellHeight = (this.gridCmp.grid.cellSize.height / 100) * this.gridPositions.height;\r\n    this.cellWidth = (this.gridCmp.grid.cellSize.width / 100) * this.gridPositions.width;\r\n    this.enableDrag = this.widgetCmp.getConfig().id;\r\n\r\n    this.renderer.setStyle(this.widgetCmp.getEl().nativeElement, 'z-index', this.ngxWidgetMover ? 0 : 100);\r\n\r\n    if (typeof PointerEvent !== 'undefined') {\r\n      window.addEventListener('pointermove', this._onMoveListener);\r\n      window.addEventListener('pointerup', this._onUpListener);\r\n    } else {\r\n      window.addEventListener('mousemove', this._onMoveListener);\r\n      window.addEventListener('mouseup', this._onUpListener);\r\n    }\r\n  }\r\n\r\n  onMove(event: MouseEvent) {\r\n    if (this.enableDrag === this.widgetCmp.getConfig().id) {\r\n      event.preventDefault();\r\n      const eventClientX = event.clientX;\r\n      const eventClientY = event.clientY;\r\n      const startRender = this.startRender;\r\n      const gridDimensions = this.gridPositions;\r\n      const desiredPosition = this.desiredPosition;\r\n      // normalize the drag position\r\n      const dragPositionX = Math.round(eventClientX) - gridDimensions.left,\r\n        dragPositionY = Math.round(eventClientY) - gridDimensions.top;\r\n\r\n      desiredPosition.top = Math.min(\r\n        Math.max(dragPositionY - this.moverOffset.top, 0),\r\n        gridDimensions.height - startRender.height - 1\r\n      );\r\n      desiredPosition.left = Math.min(\r\n        Math.max(dragPositionX - this.moverOffset.left, 0),\r\n        gridDimensions.width - startRender.width - 1\r\n      );\r\n      const currentFinalPos: Rectangle = this.determineFinalPos(this.startPosition,\r\n                                                                desiredPosition,\r\n                                                                this.startRender,\r\n                                                                this.cellHeight,\r\n                                                                this.cellWidth);\r\n      this.gridCmp.highlightArea(currentFinalPos);\r\n\r\n      this.renderer.setStyle(this.widgetCmp.getEl().nativeElement, 'top', desiredPosition.top + 'px');\r\n      this.renderer.setStyle(this.widgetCmp.getEl().nativeElement, 'left', desiredPosition.left + 'px');\r\n    }\r\n  }\r\n\r\n  onUp(event: MouseEvent) {\r\n    if (this.enableDrag === this.widgetCmp.getConfig().id) {\r\n      event.preventDefault();\r\n      const eventClientX = event.clientX;\r\n      const eventClientY = event.clientY;\r\n      const startRender = this.startRender;\r\n      const gridDimensions = this.gridPositions;\r\n      const desiredPosition = this.desiredPosition;\r\n      // normalize the drag position\r\n      const dragPositionX = Math.round(eventClientX) - gridDimensions.left,\r\n        dragPositionY = Math.round(eventClientY) - gridDimensions.top;\r\n\r\n      desiredPosition.top = Math.min(\r\n        Math.max(dragPositionY - this.moverOffset.top, 0),\r\n        gridDimensions.height - startRender.height - 1\r\n      );\r\n      desiredPosition.left = Math.min(\r\n        Math.max(dragPositionX - this.moverOffset.left, 0),\r\n        gridDimensions.width - startRender.width - 1\r\n      );\r\n      const anchorTop = this.getAnchor(Math.max(dragPositionY, 0), this.cellHeight, 1);\r\n      const anchorLeft = this.getAnchor(Math.max(dragPositionX, 0), this.cellWidth, 1);\r\n      const dropPosition: any = this.gridCmp.rasterizeCoords(anchorLeft, anchorTop);\r\n      const obstructingWidgetId = this.gridCmp.areaObstructor(dropPosition);\r\n      let finalPos;\r\n      if (obstructingWidgetId && this.ngxWidgetMover) {\r\n        const obstructingWidgetCmp: NgxWidgetComponent = this.gridCmp.getWidgetById(obstructingWidgetId);\r\n        const obstructingWidgetPosition = this.gridCmp.getWidgetPositionByWidgetId(obstructingWidgetId);\r\n        const draggedWidgetPosition = this.widgetCmp.position;\r\n        this.widgetCmp.position = obstructingWidgetPosition;\r\n        this.gridCmp.updateWidget(this.widgetCmp, true);\r\n        obstructingWidgetCmp.position = draggedWidgetPosition;\r\n        this.gridCmp.updateWidget(obstructingWidgetCmp, true);\r\n      } else {\r\n        finalPos = this.determineFinalPos(this.startPosition,\r\n                                          desiredPosition,\r\n                                          this.startRender,\r\n                                          this.cellHeight,\r\n                                          this.cellWidth);\r\n        this.widgetCmp.position = finalPos;\r\n        this.gridCmp.updateWidget(this.widgetCmp, false);\r\n      }\r\n      this.gridCmp.resetHighlights();\r\n      this.renderer.removeClass(this.widgetCmp.getEl().nativeElement, 'wg-moving');\r\n      this.renderer.removeStyle(this.widgetCmp.getEl().nativeElement, 'z-index');\r\n      this.enableDrag = null;\r\n    }\r\n    if (typeof PointerEvent !== 'undefined') {\r\n      window.removeEventListener('pointermove', this._onMoveListener);\r\n      window.removeEventListener('pointerup', this._onUpListener);\r\n    } else {\r\n      window.removeEventListener('mousemove', this._onMoveListener);\r\n      window.removeEventListener('mouseup', this._onUpListener);\r\n    }\r\n  }\r\n\r\n  getAnchor(val: number, cellWOrH: number, marginFactor = 2): number {\r\n    return (val % cellWOrH) > (cellWOrH / marginFactor) ? val + Math.floor(cellWOrH) : val;\r\n  }\r\n\r\n  determineFinalPos(startPos: Rectangle, desiredPos: Rectangle, startRender: RectanglePixels,\r\n                    cellHt: number, cellWd: number): Rectangle {\r\n    if (startRender.top === desiredPos.top && startRender.left === desiredPos.left) {\r\n      return startPos;\r\n    }\r\n\r\n    const anchorTop = this.getAnchor(desiredPos.top, cellHt);\r\n    const anchorLeft = this.getAnchor(desiredPos.left, cellWd);\r\n    const movedDown = anchorTop >= startRender.top;\r\n    const movedRight = anchorLeft >= startRender.left;\r\n    const desiredFinalPosition: any = this.gridCmp.rasterizeCoords(anchorLeft, anchorTop);\r\n    const path = new PathIterator(desiredFinalPosition, startPos);\r\n    while (path && path.hasNext()) {\r\n      const currPos = path.next();\r\n\r\n      const targetArea = new Rectangle({\r\n                                         top: currPos.top,\r\n                                         left: currPos.left,\r\n                                         height: startPos.height,\r\n                                         width: startPos.width\r\n                                       });\r\n\r\n      const options = {\r\n        excludedArea: startPos,\r\n        fromBottom: movedDown,\r\n        fromRight: movedRight\r\n      };\r\n      // If widget swap is enabled and area is obstructed, show original position\r\n      if (this.ngxWidgetMover && this.gridCmp.isAreaObstructed(targetArea, options)) {\r\n        return new Rectangle(startPos);\r\n      }\r\n      if (!this.gridCmp.isAreaObstructed(targetArea, options)) {\r\n        // try to get closer to the desired position by leaving the original path\r\n        const height = targetArea.height;\r\n        const width = targetArea.width;\r\n        if (desiredFinalPosition.top < targetArea.top) {\r\n          while (desiredFinalPosition.top <= (targetArea.top - 1)) {\r\n            const checkRect = new Rectangle({top: targetArea.top - 1, left: targetArea.left, height, width});\r\n            const isRectVacant = !this.gridCmp.isAreaObstructed(checkRect, options);\r\n            if (isRectVacant) {\r\n              targetArea.top--;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        } else if (desiredFinalPosition.top > targetArea.top) {\r\n          while (desiredFinalPosition.top >= (targetArea.top + 1)) {\r\n            const checkRect = new Rectangle({top: targetArea.top + 1, left: targetArea.left, height, width});\r\n            const isRectVacant = !this.gridCmp.isAreaObstructed(checkRect, options);\r\n            if (isRectVacant) {\r\n              targetArea.top++;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (desiredFinalPosition.left < targetArea.left) {\r\n          while (desiredFinalPosition.left <= (targetArea.left - 1)) {\r\n            const checkRect = new Rectangle({top: targetArea.top, left: targetArea.left - 1, height, width});\r\n            const isRectVacant = !this.gridCmp.isAreaObstructed(checkRect, options);\r\n            if (isRectVacant) {\r\n              targetArea.left--;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        } else if (desiredFinalPosition.left > targetArea.left) {\r\n          while (desiredFinalPosition.left >= (targetArea.left + 1)) {\r\n            const checkRect = new Rectangle({top: targetArea.top, left: targetArea.left + 1, height, width});\r\n            const isRectVacant = !this.gridCmp.isAreaObstructed(checkRect, options);\r\n            if (isRectVacant) {\r\n              targetArea.left++;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        return new Rectangle(targetArea);\r\n      }\r\n    }\r\n    return new Rectangle(startPos);\r\n  }\r\n}\r\n","import { Directive, ElementRef, forwardRef, HostListener, Inject, Input, Renderer2 } from '@angular/core';\r\nimport { NgxWidgetGridComponent } from '../components/grid/grid.component';\r\nimport { NgxWidgetComponent } from '../components/widget/widget.component';\r\nimport { Rectangle } from '../models/Rectangle.model';\r\nimport { RESIZE_DIRECTIONS } from '../Utils';\r\n\r\nconst MIN_HEIGHT = 42;\r\nconst MIN_WIDTH = 42;\r\n\r\n@Directive({\r\n             selector: '[ngxWidgetResizer]'\r\n           })\r\nexport class NgxWidgetResizerDirective {\r\n\r\n  public moveUpAllowed = false;\r\n  public moveDownAllowed = false;\r\n  public moveLeftAllowed = false;\r\n  public moveRightAllowed = false;\r\n  public parentContainer: any;\r\n  public startRender: any;\r\n  public gridPositions: Rectangle;\r\n  public delta: { top: number, right: number, bottom: number, left: number };\r\n  public draggerOffset: { top: number, right: number, bottom: number, left: number };\r\n  public startPosition: Rectangle;\r\n  public enableDrag: string = null;\r\n  public _resizeDirection: string;\r\n  private _onMoveListener = this.onMove.bind(this);\r\n  private _onUpListener = this.onUp.bind(this);\r\n\r\n  constructor(private el: ElementRef,\r\n              private renderer: Renderer2,\r\n              @Inject(forwardRef(() => NgxWidgetGridComponent))\r\n              private gridCmp: NgxWidgetGridComponent,\r\n              @Inject(forwardRef(() => NgxWidgetComponent))\r\n              private widgetCmp: NgxWidgetComponent) {\r\n    this.parentContainer = this.el.nativeElement.parentElement;\r\n  }\r\n\r\n  public get resizeDirection() {\r\n    return this._resizeDirection;\r\n  }\r\n\r\n  @Input()\r\n  public set ngxWidgetResizer(dir: string) {\r\n    this._resizeDirection = dir;\r\n    this.moveUpAllowed = false;\r\n    this.moveDownAllowed = false;\r\n    this.moveLeftAllowed = false;\r\n    this.moveRightAllowed = false;\r\n    switch (dir) {\r\n      case RESIZE_DIRECTIONS.top:\r\n        this.moveUpAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.left:\r\n        this.moveLeftAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.bottom:\r\n        this.moveDownAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.right:\r\n        this.moveRightAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.topLeft:\r\n        this.moveUpAllowed = true;\r\n        this.moveLeftAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.topRight:\r\n        this.moveUpAllowed = true;\r\n        this.moveRightAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.bottomLeft:\r\n        this.moveDownAllowed = true;\r\n        this.moveLeftAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.bottomRight:\r\n        this.moveDownAllowed = true;\r\n        this.moveRightAllowed = true;\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  @HostListener('pointerdown', ['$event'])\r\n  @HostListener('mousedown', ['$event'])\r\n  onDown(event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.enableDrag = this.widgetCmp.getConfig().id;\r\n    this.renderer.addClass(this.widgetCmp.getEl().nativeElement, 'wg-resizing');\r\n    this.renderer.addClass(this.el.nativeElement, 'dragging');\r\n    this.startPosition = this.gridCmp.getWidgetPosition(this.widgetCmp);\r\n\r\n    this.startRender = {\r\n      top: Math.ceil(this.widgetCmp.getEl().nativeElement.offsetTop),\r\n      left: Math.ceil(this.widgetCmp.getEl().nativeElement.offsetLeft),\r\n      height: Math.floor(this.parentContainer.offsetHeight),\r\n      width: Math.floor(this.parentContainer.offsetWidth)\r\n    }; // pixel values\r\n    this.startRender.bottom = this.startRender.top + this.startRender.height;\r\n    this.startRender.right = this.startRender.left + this.startRender.width;\r\n\r\n    const eventOffsetX = event.offsetX || event.layerX;\r\n    const eventOffsetY = event.offsetY || event.layerY;\r\n\r\n    this.delta = {top: 0, right: 0, bottom: 0, left: 0};\r\n    this.draggerOffset = {\r\n      top: eventOffsetY,\r\n      left: eventOffsetX,\r\n      bottom: eventOffsetY - this.el.nativeElement.offsetHeight,\r\n      right: eventOffsetX - this.el.nativeElement.offsetWidth\r\n    };\r\n\r\n    this.gridPositions = this.gridCmp.getGridRectangle();\r\n    if (typeof PointerEvent !== 'undefined') {\r\n      window.addEventListener('pointermove', this._onMoveListener);\r\n      window.addEventListener('pointerup', this._onUpListener);\r\n    } else {\r\n      window.addEventListener('mousemove', this._onMoveListener);\r\n      window.addEventListener('mouseup', this._onUpListener);\r\n    }\r\n  }\r\n\r\n  onMove(event: MouseEvent) {\r\n    if (this.enableDrag === this.widgetCmp.getConfig().id) {\r\n      event.preventDefault();\r\n      const eventClientX = event.clientX;\r\n      const eventClientY = event.clientY;\r\n      const gridDims = this.gridPositions;\r\n      const startRender = this.startRender;\r\n      // normalize the drag position\r\n      const dragPositionX = Math.round(eventClientX) - gridDims.left;\r\n      const dragPositionY = Math.round(eventClientY) - gridDims.top;\r\n      const delta = this.delta;\r\n      if (this.moveUpAllowed) {\r\n        delta.top = Math.min(Math.max(dragPositionY - this.draggerOffset.top, 0), gridDims.height) - startRender.top;\r\n        delta.top = Math.min(delta.top, startRender.height - MIN_HEIGHT);\r\n      } else if (this.moveDownAllowed) {\r\n        delta.bottom = startRender.bottom - Math.min(Math.max(dragPositionY - this.draggerOffset.bottom, 0), gridDims.height);\r\n        delta.bottom = Math.min(delta.bottom, startRender.height - MIN_HEIGHT);\r\n      }\r\n\r\n      if (this.moveLeftAllowed) {\r\n        delta.left = Math.min(Math.max(dragPositionX - this.draggerOffset.left, 0), gridDims.width) - startRender.left;\r\n        delta.left = Math.min(delta.left, startRender.width - MIN_WIDTH);\r\n      } else if (this.moveRightAllowed) {\r\n        delta.right = startRender.right - Math.min(Math.max(dragPositionX - this.draggerOffset.right, 0), gridDims.width);\r\n        delta.right = Math.min(delta.right, startRender.width - MIN_WIDTH);\r\n      }\r\n\r\n      const currentFinalPos = this.determineFinalPos();\r\n      this.gridCmp.highlightArea(currentFinalPos);\r\n\r\n      this.renderer.setStyle(this.parentContainer, 'top', this.delta.top + 'px');\r\n      this.renderer.setStyle(this.parentContainer, 'left', this.delta.left + 'px');\r\n      this.renderer.setStyle(this.parentContainer, 'bottom', this.delta.bottom + 'px');\r\n      this.renderer.setStyle(this.parentContainer, 'right', this.delta.right + 'px');\r\n    }\r\n  }\r\n\r\n  onUp(event: MouseEvent) {\r\n    if (this.enableDrag === this.widgetCmp.getConfig().id) {\r\n      event.preventDefault();\r\n      this.el.nativeElement.setAttribute('draggable', false);\r\n      this.renderer.removeClass(this.el.nativeElement, 'dragging');\r\n      this.renderer.removeClass(this.widgetCmp.getEl().nativeElement, 'wg-resizing');\r\n      this.enableDrag = null;\r\n      this.widgetCmp.position = this.determineFinalPos();\r\n      this.gridCmp.updateWidget(this.widgetCmp, false);\r\n      this.gridCmp.resetHighlights();\r\n\r\n      // reset style\r\n      this.renderer.removeClass(this.widgetCmp.getEl().nativeElement, 'wg-resizing');\r\n      this.renderer.removeClass(this.el.nativeElement, 'dragging');\r\n      this.renderer.setStyle(this.parentContainer, 'top', '');\r\n      this.renderer.setStyle(this.parentContainer, 'left', '');\r\n      this.renderer.setStyle(this.parentContainer, 'bottom', '');\r\n      this.renderer.setStyle(this.parentContainer, 'right', '');\r\n    }\r\n    if (typeof PointerEvent !== 'undefined') {\r\n      window.removeEventListener('pointermove', this._onMoveListener);\r\n      window.removeEventListener('pointerup', this._onUpListener);\r\n    } else {\r\n      window.removeEventListener('mousemove', this._onMoveListener);\r\n      window.removeEventListener('mouseup', this._onUpListener);\r\n    }\r\n  }\r\n\r\n  findCollision(start: number, end: number, val: number, reverse = false): boolean {\r\n    let foundCollision = false;\r\n    for (let i = start; i <= end; i++) {\r\n      const checker = reverse ? this.gridCmp.isPointObstructed(i, val) : this.gridCmp.isPointObstructed(val, i);\r\n      if (checker) {\r\n        foundCollision = true;\r\n        break;\r\n      }\r\n    }\r\n    return foundCollision;\r\n  }\r\n\r\n  determineFinalPos(): any {\r\n    const finalPos: Rectangle = new Rectangle();\r\n    const startRender = this.startRender;\r\n    const delta = this.delta;\r\n    const requestedStartPoint = this.gridCmp.rasterizeCoords(startRender.left + delta.left + 1, startRender.top + delta.top + 1);\r\n    const requestedEndPoint = this.gridCmp.rasterizeCoords(startRender.right - delta.right - 1, startRender.bottom - delta.bottom - 1);\r\n\r\n    const requestedPos = {\r\n      top: requestedStartPoint.top,\r\n      left: requestedStartPoint.left,\r\n      right: requestedEndPoint.left,\r\n      bottom: requestedEndPoint.top\r\n    };\r\n    // determine a suitable final position (one that is not obstructed)\r\n    let foundCollision;\r\n    const start = Math.max(this.startPosition.left, requestedPos.left);\r\n    const end = Math.min(this.startPosition.right, requestedPos.right);\r\n    if (this.moveUpAllowed && requestedPos.top < this.startPosition.top) {\r\n      finalPos.top = this.startPosition.top;\r\n\r\n      while (finalPos.top > requestedPos.top) {\r\n        // check whether adding another row above would cause any conflict\r\n        foundCollision = this.findCollision(start, end, finalPos.top - 1);\r\n        if (foundCollision) {\r\n          break;\r\n        }\r\n        finalPos.top--; // add row above\r\n      }\r\n    } else if (this.moveDownAllowed && requestedPos.bottom > this.startPosition.bottom) {\r\n      finalPos.top = finalPos.top || requestedPos.top;\r\n      finalPos.height = this.startPosition.bottom + 1 - this.startPosition.top;\r\n      while (finalPos.bottom < requestedPos.bottom) {\r\n        // check whether adding another row below would cause any conflict\r\n        foundCollision = this.findCollision(start, end, finalPos.bottom + 1);\r\n        if (foundCollision) {\r\n          break;\r\n        }\r\n        finalPos.height++; // add row below\r\n      }\r\n    }\r\n\r\n    finalPos.top = finalPos.top || requestedPos.top;\r\n    finalPos.height = finalPos.height || requestedPos.bottom + 1 - finalPos.top;\r\n\r\n    if (this.moveLeftAllowed && requestedPos.left < this.startPosition.left) {\r\n      finalPos.left = this.startPosition.left;\r\n\r\n      while (finalPos.left > requestedPos.left) {\r\n        // check whether adding another column would cause any conflict\r\n        foundCollision = this.findCollision(finalPos.top, finalPos.bottom, finalPos.left - 1, true);\r\n        if (foundCollision) {\r\n          break;\r\n        }\r\n\r\n        finalPos.left--; // add column\r\n      }\r\n    } else if (this.moveRightAllowed && requestedPos.right > this.startPosition.right) {\r\n      finalPos.left = finalPos.left || requestedPos.left;\r\n      finalPos.width = this.startPosition.right + 1 - this.startPosition.left;\r\n      while (finalPos.right < requestedPos.right) {\r\n        foundCollision = this.findCollision(finalPos.top, finalPos.bottom, finalPos.right + 1, true);\r\n        if (foundCollision) {\r\n          break;\r\n        }\r\n\r\n        finalPos.width++;\r\n      }\r\n    }\r\n\r\n    finalPos.left = finalPos.left || requestedPos.left;\r\n    finalPos.width = finalPos.width || requestedPos.right + 1 - finalPos.left;\r\n    return finalPos;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxGridOverlayComponent } from './components/gridOverlay/gridOverlay.component';\r\nimport { NgxWidgetComponent } from './components/widget/widget.component';\r\nimport { NgxWidgetGridComponent } from './components/grid/grid.component';\r\nimport { NgxWidgetMoverDirective } from './directives/widgetMover.directive';\r\nimport { NgxWidgetResizerDirective } from './directives/widgetResizer.directive';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n            imports: [\r\n              CommonModule\r\n            ],\r\n            declarations: [\r\n              NgxGridOverlayComponent,\r\n              NgxWidgetComponent,\r\n              NgxWidgetGridComponent,\r\n              NgxWidgetMoverDirective,\r\n              NgxWidgetResizerDirective\r\n            ],\r\n            exports: [\r\n              NgxWidgetComponent,\r\n              NgxWidgetGridComponent\r\n            ]\r\n          })\r\nexport class NgxWidgetGridModule {}\r\n"],"names":["tslib_1.__values"],"mappings":"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"}
