{"version":3,"file":"ngx-widget-grid.umd.js.map","sources":["ng://ngx-widget-grid/lib/models/CellSize.model.ts","ng://ngx-widget-grid/lib/models/Grid.model.ts","ng://ngx-widget-grid/lib/models/Rectangle.model.ts","ng://ngx-widget-grid/lib/models/WidgetConfig.model.ts","ng://ngx-widget-grid/lib/Utils.ts","ng://ngx-widget-grid/lib/components/widget/widget.component.ts","node_modules/tslib/tslib.es6.js","ng://ngx-widget-grid/lib/models/Cell.model.ts","ng://ngx-widget-grid/lib/models/GridRenderer.model.ts","ng://ngx-widget-grid/lib/components/grid/grid.component.ts","ng://ngx-widget-grid/lib/components/gridOverlay/gridOverlay.component.ts","ng://ngx-widget-grid/lib/models/PathIterator.model.ts","ng://ngx-widget-grid/lib/directives/widgetMover.directive.ts","ng://ngx-widget-grid/lib/directives/widgetResizer.directive.ts","ng://ngx-widget-grid/lib/ngx-widget-grid.module.ts"],"sourcesContent":["export class CellSize {\r\n  private _height = 0;\r\n  private _width = 0;\r\n\r\n  constructor(rowCount: number, columnCount: number) {\r\n    this._height = rowCount ? 100 / rowCount : 0;\r\n    this._width = columnCount ? 100 / columnCount : 0;\r\n  };\r\n\r\n  get height() {\r\n    return this._height;\r\n  }\r\n\r\n  get width() {\r\n    return this._width;\r\n  }\r\n}\r\n","import { CellSize } from './CellSize.model';\r\nimport { WidgetConfig } from './WidgetConfig.model';\r\n\r\nexport class Grid {\r\n  private _widgets: WidgetConfig[] = [];\r\n  private _rows = 3;\r\n  private _columns = 3;\r\n  private _cellSize: CellSize;\r\n\r\n  constructor(rows?: number, columns?: number) {\r\n    if (+rows) {\r\n      this._rows = +rows;\r\n    }\r\n    if (+columns) {\r\n      this._columns = +columns;\r\n    }\r\n    this._cellSize = new CellSize(this._rows, this._columns);\r\n  }\r\n\r\n  get widgets() {\r\n    return this._widgets;\r\n  }\r\n\r\n  get rows() {\r\n    return this._rows;\r\n  }\r\n\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  get cellSize() {\r\n    return this._cellSize;\r\n  }\r\n\r\n  add(widget: WidgetConfig) {\r\n    this._widgets.push(widget);\r\n  }\r\n\r\n  remove(widget: WidgetConfig) {\r\n    const widgetIndex = this._widgets.indexOf(widget);\r\n    if (widgetIndex > -1) {\r\n      this._widgets.splice(widgetIndex, 1);\r\n    }\r\n  }\r\n\r\n  removeAll() {\r\n    this._widgets.splice(0);\r\n  }\r\n\r\n  hasWidget(widget: WidgetConfig) {\r\n    const widgetIndex = this._widgets.indexOf(widget);\r\n    return widgetIndex > -1;\r\n  }\r\n\r\n  resize(rows: number, columns: number) {\r\n    columns = +columns || 0;\r\n    rows = +rows || 0;\r\n\r\n    if (columns > 0 && rows > 0 && columns !== this._columns || rows !== this._rows) {\r\n      this._columns = columns;\r\n      this._rows = rows;\r\n      this._cellSize = new CellSize(this._rows, this._columns);\r\n    }\r\n  }\r\n}\r\n","export interface IRectangle {\r\n  top?: number;\r\n  left?: number;\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport class Rectangle implements IRectangle {\r\n  public top = 0;\r\n  public left = 0;\r\n  public width = 0;\r\n  public height = 0;\r\n\r\n\r\n  constructor(obj?: IRectangle) {\r\n    if (obj) {\r\n      this.top = +obj.top || 0;\r\n      this.left = +obj.left || 0;\r\n      this.width = +obj.width || 0;\r\n      this.height = +obj.height || 0;\r\n    }\r\n  }\r\n\r\n  public get bottom(): number {\r\n    return this.top + this.height - 1;\r\n  }\r\n\r\n  public get right(): number {\r\n    return this.left + this.width - 1;\r\n  }\r\n\r\n  getSurfaceArea(): number {\r\n    return this.height * this.width;\r\n  }\r\n}\r\n","import { Rectangle } from './Rectangle.model';\r\n\r\nexport class WidgetConfig {\r\n  static widgetCount = 0;\r\n  public id: string;\r\n  private _position: Rectangle = new Rectangle();\r\n\r\n  constructor(rect?: Rectangle) {\r\n    this.id = this.generateUID();\r\n    if (rect) {\r\n      this.position = rect;\r\n    }\r\n  }\r\n\r\n  public get position(): Rectangle {\r\n    return this._position;\r\n  }\r\n\r\n  public set position(gridArea: Rectangle) {\r\n    this._position.top = +gridArea.top ? +gridArea.top : 0;\r\n    this._position.left = +gridArea.left ? +gridArea.left : 0;\r\n    this._position.width = +gridArea.width ? +gridArea.width : 0;\r\n    this._position.height = +gridArea.height ? +gridArea.height : 0;\r\n  }\r\n\r\n  public generateUID() {\r\n    return 'ngxDashboardWidget-' + ++WidgetConfig.widgetCount;\r\n  }\r\n}\r\n","export class Utils {\r\n  static isNumber(val: any): boolean {\r\n    return typeof val === 'number';\r\n  }\r\n\r\n  static isDefined(val: any): boolean {\r\n    return val !== undefined;\r\n  }\r\n\r\n  static isObject(val: any): boolean {\r\n    return typeof val === 'object';\r\n  }\r\n\r\n}\r\n\r\nexport enum RESIZE_DIRECTIONS {\r\n  topLeft = 'NW',\r\n  top = 'N',\r\n  topRight = 'NE',\r\n  right = 'E',\r\n  bottomRight = 'SE',\r\n  bottom = 'S',\r\n  bottomLeft = 'SW',\r\n  left = 'W'\r\n}\r\n\r\nexport const ALL_DIRECTIONS: RESIZE_DIRECTIONS[] = [\r\n  RESIZE_DIRECTIONS.bottom,\r\n  RESIZE_DIRECTIONS.left,\r\n  RESIZE_DIRECTIONS.right,\r\n  RESIZE_DIRECTIONS.top,\r\n  RESIZE_DIRECTIONS.bottomLeft,\r\n  RESIZE_DIRECTIONS.bottomRight,\r\n  RESIZE_DIRECTIONS.topLeft,\r\n  RESIZE_DIRECTIONS.topRight\r\n];\r\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\r\nimport { WidgetConfig } from '../../models/WidgetConfig.model';\r\nimport { Rectangle } from '../../models/Rectangle.model';\r\nimport { ALL_DIRECTIONS, RESIZE_DIRECTIONS } from '../../Utils';\r\n\r\n@Component({\r\n             selector: 'ngx-widget',\r\n             styleUrls: ['./widget.component.scss'],\r\n             templateUrl: './widget.component.html',\r\n             changeDetection: ChangeDetectionStrategy.OnPush\r\n           })\r\nexport class NgxWidgetComponent {\r\n\r\n  @Input() swapOnMove = false;\r\n  @Output()\r\n  positionChange: EventEmitter<Rectangle> = new EventEmitter();\r\n  @Input() movable = false;\r\n  public allDirections = RESIZE_DIRECTIONS;\r\n  public isTopResizable = false;\r\n  public isRightResizable = false;\r\n  public isBottomResizable = false;\r\n  public isLeftResizable = false;\r\n  public isTopRightResizable = false;\r\n  public isTopLeftResizable = false;\r\n  public isBottomRightResizable = false;\r\n  public isBottomLeftResizable = false;\r\n  public widgetConfig: WidgetConfig;\r\n  public _position: Rectangle;\r\n  public _resizable = false;\r\n  public _resizeDirections: RESIZE_DIRECTIONS[] = ALL_DIRECTIONS;\r\n\r\n  constructor(private elRef: ElementRef) {\r\n    this.widgetConfig = new WidgetConfig(this.position);\r\n  }\r\n\r\n  get position(): Rectangle {\r\n    return this._position;\r\n  }\r\n\r\n  @Input()\r\n  set position(position: Rectangle) {\r\n    this._position = position;\r\n    this.widgetConfig.position = position;\r\n    this.positionChange.emit(position);\r\n  }\r\n\r\n  get resizable() {\r\n    return this._resizable;\r\n  }\r\n\r\n  @Input()\r\n  set resizable(resizable: boolean) {\r\n    this._resizable = resizable;\r\n    if (resizable) {\r\n      this.setResizeDirections();\r\n    }\r\n  }\r\n\r\n  get resizeDirections() {\r\n    return this._resizeDirections;\r\n  }\r\n\r\n  @Input()\r\n  set resizeDirections(dirs: RESIZE_DIRECTIONS[]) {\r\n    this._resizeDirections = <RESIZE_DIRECTIONS[]>dirs.filter((dir: RESIZE_DIRECTIONS) => {\r\n      return ALL_DIRECTIONS.indexOf(<RESIZE_DIRECTIONS>(<string>dir).toUpperCase()) !== -1;\r\n    });\r\n    this.setResizeDirections();\r\n  }\r\n\r\n  setResizeDirections() {\r\n    this.isTopResizable = false;\r\n    this.isRightResizable = false;\r\n    this.isBottomResizable = false;\r\n    this.isLeftResizable = false;\r\n    this.isTopRightResizable = false;\r\n    this.isTopLeftResizable = false;\r\n    this.isBottomRightResizable = false;\r\n    this.isBottomLeftResizable = false;\r\n    this._resizeDirections.forEach((dir) => {\r\n      switch (dir) {\r\n        case RESIZE_DIRECTIONS.top:\r\n          this.isTopResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.left:\r\n          this.isLeftResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.bottom:\r\n          this.isBottomResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.right:\r\n          this.isRightResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.topLeft:\r\n          this.isTopLeftResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.topRight:\r\n          this.isTopRightResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.bottomLeft:\r\n          this.isBottomLeftResizable = true;\r\n          break;\r\n        case RESIZE_DIRECTIONS.bottomRight:\r\n          this.isBottomRightResizable = true;\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  getConfig(): WidgetConfig {\r\n    return this.widgetConfig;\r\n  }\r\n\r\n  getEl(): ElementRef {\r\n    return this.elRef;\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class Cell {\r\n    private _top: number;\r\n    private _left: number;\r\n\r\n    constructor(top: number, left: number) {\r\n        this._top = top;\r\n        this._left = left;\r\n    }\r\n\r\n    get top() {\r\n        return this._top;\r\n    }\r\n\r\n    get left() {\r\n        return this._left;\r\n    }\r\n}\r\n","import { Grid } from './Grid.model';\r\nimport { Cell } from './Cell.model';\r\nimport { Utils } from '../Utils';\r\nimport { Rectangle } from './Rectangle.model';\r\nimport { WidgetConfig } from './WidgetConfig.model';\r\n\r\nexport class GridRenderer {\r\n  public positions: { [key: string]: Rectangle } = {};\r\n  public cachedNextPosition: Rectangle;\r\n  public obstructions: string[] = [];\r\n  public _grid: Grid;\r\n\r\n  constructor(grid: Grid) {\r\n    this.grid = grid || new Grid();\r\n\r\n  }\r\n\r\n  get grid() {\r\n    return this._grid;\r\n  }\r\n\r\n  set grid(grid: Grid) {\r\n    this._grid = grid;\r\n    this.positions = {};\r\n    this.cachedNextPosition = undefined;\r\n    this.obstructions = [];\r\n    for (let i = 0; i < grid.rows * grid.columns; i++) {\r\n      this.obstructions[i] = null;\r\n    }\r\n  }\r\n\r\n  rasterizeCoords(left: number, top: number, gridWidth: number, gridHeight: number): Cell {\r\n    left = Math.min(Math.max(left, 0), gridWidth - 1);\r\n    top = Math.min(Math.max(top, 0), gridHeight - 1);\r\n\r\n    const x = Math.floor(top / gridHeight * this.grid.rows) + 1;\r\n    const y = Math.floor(left / gridWidth * this.grid.columns) + 1;\r\n    return new Cell(x, y);\r\n  }\r\n\r\n  getWidgetIdAt(i: number, j: number) {\r\n    for (const widgetId in this.positions) {\r\n      if (this.positions.hasOwnProperty(widgetId)) {\r\n        const position = this.positions[widgetId];\r\n\r\n        if (position.top <= i && i <= (position.top + position.height - 1) &&\r\n          position.left <= j && j <= (position.left + position.width - 1)) {\r\n          return widgetId;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getWidgetPosition(widgetId: string) {\r\n    return this.positions[widgetId];\r\n  }\r\n\r\n  setWidgetPosition(widgetId: string, newPosition: Rectangle, swappingPositions: boolean) {\r\n    const currPosition = this.positions[widgetId];\r\n    if (currPosition && !swappingPositions) {\r\n      this.setObstructionValues(currPosition, null);\r\n    }\r\n\r\n    newPosition = new Rectangle({\r\n                                  top: Utils.isNumber(newPosition.top) ? newPosition.top : currPosition.top,\r\n                                  left: Utils.isNumber(newPosition.left) ? newPosition.left : currPosition.left,\r\n                                  width: Utils.isNumber(newPosition.width) ? newPosition.width : currPosition.width,\r\n                                  height: Utils.isNumber(newPosition.height) ? newPosition.height : currPosition.height\r\n                                });\r\n    this.positions[widgetId] = newPosition;\r\n\r\n    this.setObstructionValues(this.positions[widgetId], widgetId);\r\n    this.cachedNextPosition = undefined;\r\n  }\r\n\r\n  hasSpaceLeft() {\r\n    for (const obstruction of this.obstructions) {\r\n      if (obstruction === null) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getNextPosition(): Rectangle {\r\n    if (this.cachedNextPosition !== undefined) {\r\n      return this.cachedNextPosition;\r\n    }\r\n\r\n    if (!this.hasSpaceLeft()) {\r\n      return null;\r\n    }\r\n\r\n    const maxPosition: Rectangle = this.findLargestEmptyArea();\r\n    this.cachedNextPosition = maxPosition;\r\n    return maxPosition;\r\n  }\r\n\r\n  isObstructed(i: number, j: number, excludedArea?: Rectangle) {\r\n    // obstructed if (i, j) exceeds the grid's regular non-expanding boundaries\r\n    if (i < 1 || j < 1 || j > this.grid.columns || i > this.grid.rows) {\r\n      return true;\r\n    }\r\n    const bottom = excludedArea && excludedArea.top + excludedArea.height - 1;\r\n    const right = excludedArea && excludedArea.left + excludedArea.width - 1;\r\n    // pass if (i, j) is within the excluded area, if any\r\n    if (excludedArea &&\r\n      excludedArea.top <= i &&\r\n      i <= bottom &&\r\n      excludedArea.left <= j &&\r\n      j <= right) {\r\n      return false;\r\n    }\r\n\r\n    return this._isObstructed(i, j);\r\n  }\r\n\r\n  public _isObstructed(i: number, j: number) {\r\n    return this.obstructions[(i - 1) * this.grid.columns + (j - 1)] !== null;\r\n  }\r\n\r\n  isAreaObstructed(area: Rectangle,\r\n                   options?: {\r\n                     excludedArea?: Rectangle;\r\n                     fromBottom?: boolean;\r\n                     fromRight?: boolean;\r\n                   }) {\r\n    if (!area) {\r\n      return false;\r\n    }\r\n    options = Utils.isObject(options) ? options : {};\r\n\r\n    const top = area.top;\r\n    const left = area.left;\r\n    const bottom = area.bottom || area.top + area.height - 1;\r\n    const right = area.right || area.left + area.width - 1;\r\n\r\n    if (!Utils.isNumber(top) || !Utils.isNumber(left) || !Utils.isNumber(bottom) || !Utils.isNumber(right)) {\r\n      return false;\r\n    }\r\n\r\n    const verticalStart = options.fromBottom ? bottom : top;\r\n    const verticalStep = options.fromBottom ? -1 : 1;\r\n    const verticalEnd = (options.fromBottom ? top : bottom) + verticalStep;\r\n    const horizontalStart = options.fromRight ? right : left;\r\n    const horizontalStep = options.fromRight ? -1 : 1;\r\n    const horizontalEnd = (options.fromRight ? left : right) + horizontalStep;\r\n\r\n    for (let i = verticalStart; i !== verticalEnd; i += verticalStep) {\r\n      for (let j = horizontalStart; j !== horizontalEnd; j += horizontalStep) {\r\n        if (this.isObstructed(i, j, options.excludedArea)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getStyle(widgetId: string): {\r\n    display: string;\r\n  } | {\r\n    top: string;\r\n    height: string;\r\n    left: string;\r\n    width: string;\r\n  } {\r\n    const render = this.positions[widgetId];\r\n\r\n    if (!render) {\r\n      return {display: 'none'};\r\n    }\r\n\r\n    return {\r\n      top: ((render.top - 1) * this.grid.cellSize.height).toString() + '%',\r\n      height: (render.height * this.grid.cellSize.height).toString() + '%',\r\n      left: ((render.left - 1) * this.grid.cellSize.width).toString() + '%',\r\n      width: (render.width * this.grid.cellSize.width).toString() + '%'\r\n    };\r\n  }\r\n\r\n  setObstructionValues(area: Rectangle, value: string) {\r\n    for (let i = area.top - 1; i < area.top + area.height - 1; i++) {\r\n      for (let j = area.left - 1; j < area.left + area.width - 1; j++) {\r\n        this.obstructions[i * this.grid.columns + j] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  findLargestEmptyArea(): Rectangle {\r\n    let maxArea: Rectangle = null;\r\n    let currMaxArea: Rectangle = null;\r\n    let maxSurfaceArea = 0;\r\n    let currMaxSurfaceArea = 0;\r\n    for (let i = 1; i <= this.grid.rows; i++) {\r\n      for (let j = 1; j <= this.grid.columns; j++) {\r\n        if (this._isObstructed(i, j)) {\r\n          continue;\r\n        }\r\n\r\n        const currAreaLimit = (this.grid.rows - i + 1) * (this.grid.columns - j + 1);\r\n        if (currAreaLimit < maxSurfaceArea) {\r\n          break;\r\n        }\r\n\r\n        currMaxArea = this._findLargestEmptyAreaFrom(new Cell(i, j));\r\n        currMaxSurfaceArea = currMaxArea.getSurfaceArea();\r\n\r\n        if (currMaxSurfaceArea > maxSurfaceArea) {\r\n          maxSurfaceArea = currMaxSurfaceArea;\r\n          maxArea = currMaxArea;\r\n        }\r\n      }\r\n    }\r\n    return maxArea;\r\n  }\r\n\r\n  public _findLargestEmptyAreaFrom(start: Cell) {\r\n    if (!Utils.isDefined(this.grid) || !Utils.isNumber(this.grid.columns) || !Utils.isNumber(this.grid.rows)) {\r\n      return null;\r\n    }\r\n\r\n    let maxArea = null,\r\n      maxSurfaceArea = 0,\r\n      endColumn = this.grid.columns;\r\n    for (let i = start.top; i <= this.grid.rows; i++) {\r\n      for (let j = start.left; j <= endColumn; j++) {\r\n        if (this._isObstructed(i, j)) {\r\n          endColumn = j - 1;\r\n          continue;\r\n        }\r\n\r\n        const currHeight = (i - start.top + 1);\r\n        const currWidth = (j - start.left + 1);\r\n        const currSurfaceArea = currHeight * currWidth;\r\n\r\n        if (currSurfaceArea > maxSurfaceArea) {\r\n          maxSurfaceArea = currSurfaceArea;\r\n          maxArea = new Rectangle({\r\n                                    top: start.top,\r\n                                    left: start.left,\r\n                                    width: currWidth,\r\n                                    height: currHeight\r\n                                  });\r\n        }\r\n      }\r\n    }\r\n    return maxArea;\r\n  }\r\n\r\n  render(grid: Grid, emitWidgetPositionUpdated?: Function) {\r\n    this.grid = grid;\r\n    const widgets: WidgetConfig[] = this.grid && this.grid.widgets ? this.grid.widgets : [];\r\n    const unpositionedWidgets: WidgetConfig[] = [];\r\n    widgets.forEach((widget: WidgetConfig) => {\r\n      const position: Rectangle = widget.position;\r\n      if (position.width * position.height === 0 ||\r\n        this.isAreaObstructed(position)) {\r\n        unpositionedWidgets.push(widget);\r\n      } else {\r\n        this.setWidgetPosition(widget.id, position, false);\r\n      }\r\n    });\r\n\r\n    unpositionedWidgets.forEach((widget: WidgetConfig) => {\r\n      const nextPosition = this.getNextPosition();\r\n      if (nextPosition !== null) {\r\n        widget.position = nextPosition;\r\n        this.setWidgetPosition(widget.id, nextPosition, false);\r\n      } else {\r\n        widget.position = new Rectangle();\r\n        this.setWidgetPosition(widget.id, new Rectangle(), false);\r\n      }\r\n      if (emitWidgetPositionUpdated) {\r\n        emitWidgetPositionUpdated(widget);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { Grid } from '../../models/Grid.model';\r\nimport { NgxWidgetComponent } from '../widget/widget.component';\r\nimport { GridRenderer } from '../../models/GridRenderer.model';\r\nimport { Cell } from '../../models/Cell.model';\r\nimport { WidgetConfig } from '../../models/WidgetConfig.model';\r\nimport { Rectangle } from '../../models/Rectangle.model';\r\nimport { WidgetPositionChange } from '../../models/widgetPositionChange.interface';\r\n\r\n@Component({\r\n             selector: 'ngx-widget-grid',\r\n             styleUrls: ['./grid.component.scss'],\r\n             templateUrl: './grid.component.html',\r\n             changeDetection: ChangeDetectionStrategy.OnPush\r\n           })\r\nexport class NgxWidgetGridComponent implements AfterViewInit {\r\n\r\n  @Input() showGrid = false;\r\n  @Output() public widgetPositionChange: EventEmitter<WidgetPositionChange> = new EventEmitter<WidgetPositionChange>();\r\n  @Output() public gridFull: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @ContentChildren(NgxWidgetComponent) public widgetComponents: QueryList<NgxWidgetComponent>;\r\n  public grid: Grid;\r\n  public gridRenderer: GridRenderer;\r\n  public highlightedArea: Rectangle;\r\n  public gridAlreadyFull = false;\r\n  public _rows: number;\r\n  public _columns: number;\r\n  public _highlightNextPosition = false;\r\n\r\n  constructor(private el: ElementRef,\r\n              private _changeDetector: ChangeDetectorRef,\r\n              private _renderer: Renderer2) {\r\n    this.grid = new Grid(this.rows, this.columns);\r\n    this.gridRenderer = new GridRenderer(this.grid);\r\n  }\r\n\r\n  get rows() {\r\n    return this._rows;\r\n  }\r\n\r\n  @Input()\r\n  set rows(rows) {\r\n    this._rows = rows;\r\n    this.updateGridSize();\r\n  }\r\n\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  @Input()\r\n  set columns(cols) {\r\n    this._columns = cols;\r\n    this.updateGridSize();\r\n  }\r\n\r\n  get highlightNextPosition(): boolean {\r\n    return this._highlightNextPosition;\r\n  }\r\n\r\n  @Input()\r\n  set highlightNextPosition(highlightNext: boolean) {\r\n    this._highlightNextPosition = highlightNext;\r\n    if (highlightNext) {\r\n      this.updateNextPositionHighlight();\r\n    } else {\r\n      this.resetHighlights();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.refreshWidgets();\r\n    this.widgetComponents.changes.subscribe(() => {\r\n      this.clearGrid();\r\n      this.refreshWidgets();\r\n    });\r\n  }\r\n\r\n  refreshWidgets() {\r\n    this.widgetComponents.forEach((widget: NgxWidgetComponent) => {\r\n      if (!this.hasWidget(widget)) {\r\n        this.addWidget(widget, true);\r\n      } else {\r\n      }\r\n    });\r\n    this.updateRendering();\r\n  }\r\n\r\n  hasWidget(widget: NgxWidgetComponent): boolean {\r\n    return this.grid.hasWidget(widget.getConfig());\r\n  }\r\n\r\n  addWidget(widget: NgxWidgetComponent, deferredRender?: boolean) {\r\n    this.grid.add(widget.getConfig());\r\n    if (!deferredRender) {\r\n      this.updateRendering();\r\n    }\r\n  }\r\n\r\n  clearGrid() {\r\n    this.grid.removeAll();\r\n  }\r\n\r\n  updateGridSize() {\r\n    const columns = this.columns;\r\n    const rows = this.rows;\r\n    if (this.grid.columns !== columns || this.grid.rows !== rows) {\r\n      this.grid.resize(rows, columns);\r\n      this.updateRendering();\r\n    }\r\n  }\r\n\r\n  updateRendering() {\r\n    this.gridRenderer.render(this.grid, this.emitUpdatePosition.bind(this));\r\n    this.updateNextPositionHighlight();\r\n    // TODO: retrieve all widgets and call their updateRendering\r\n    if (this.widgetComponents) {\r\n      this.widgetComponents.forEach((widget: NgxWidgetComponent) => {\r\n        this.updateWidget(widget, false);\r\n      });\r\n    }\r\n  }\r\n\r\n  getGridRectangle(): Rectangle {\r\n    const gridContainer = this.el.nativeElement;\r\n\r\n    // c.f. jQuery#offset: https://github.com/jquery/jquery/blob/2d715940b9b6fdeed005cd006c8bf63951cf7fb2/src/offset.js#L93-105\r\n    const rect = gridContainer.getBoundingClientRect();\r\n    if (rect.width || rect.height || gridContainer.getClientRects().length) {\r\n      const doc = gridContainer.ownerDocument;\r\n      const docElem = doc.documentElement;\r\n      return new Rectangle({\r\n                             top: rect.top + window.pageYOffset - docElem.clientTop,\r\n                             left: rect.left + window.pageXOffset - docElem.clientLeft,\r\n                             height: rect.height,\r\n                             width: rect.width\r\n                           });\r\n    }\r\n    return new Rectangle({top: 0, left: 0, height: 0, width: 0});\r\n  }\r\n\r\n  rasterizeCoords(x: number, y: number): Cell {\r\n    return this.gridRenderer.rasterizeCoords(x, y, this.el.nativeElement.clientWidth, this.el.nativeElement.clientHeight);\r\n  }\r\n\r\n  updateWidget(widget: NgxWidgetComponent, swappingWidgets: boolean) {\r\n    const config = widget.getConfig();\r\n    const newPosition = config.position;\r\n    const el: ElementRef = widget.getEl();\r\n    this.gridRenderer.setWidgetPosition(config.id, newPosition, swappingWidgets);\r\n    const widgetStyles = this.getWidgetStyle(widget);\r\n    for (const style in widgetStyles) {\r\n      if (widgetStyles.hasOwnProperty(style)) {\r\n        this._renderer.setStyle(el.nativeElement, style, widgetStyles[style]);\r\n      }\r\n    }\r\n    this.emitUpdatePosition(config);\r\n    this.assessAvailableGridSpace();\r\n  }\r\n\r\n  getWidgetPositionByWidgetId(widgetId: string) {\r\n    return this.gridRenderer.getWidgetPosition(widgetId);\r\n  }\r\n\r\n  getWidgetPosition(widget: NgxWidgetComponent) {\r\n    return this.getWidgetPositionByWidgetId(widget.getConfig().id);\r\n  }\r\n\r\n  getWidgetStyle(widget: NgxWidgetComponent) {\r\n    return this.gridRenderer.getStyle(widget.getConfig().id);\r\n  }\r\n\r\n  isPointObstructed(i: number, j: number) {\r\n    return this.gridRenderer ? this.gridRenderer.isObstructed(i, j) : true;\r\n  }\r\n\r\n  isAreaObstructed(area: Rectangle,\r\n                   options: {\r\n                     excludedArea?: Rectangle;\r\n                     fromBottom?: boolean;\r\n                     fromRight?: boolean;\r\n                   }): boolean {\r\n    return this.gridRenderer ? this.gridRenderer.isAreaObstructed(area, options) : true;\r\n  }\r\n\r\n  areaObstructor(area: Rectangle) {\r\n    return this.gridRenderer.obstructions[(area.top - 1) * this.grid.columns + (area.left - 1)];\r\n  }\r\n\r\n  highlightArea(area: Rectangle) {\r\n    if (area.top && area.left && area.height && area.width) {\r\n      setTimeout(() => {\r\n        this.highlightedArea = area;\r\n        this._changeDetector.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  updateNextPositionHighlight() {\r\n    if (this.highlightNextPosition) {\r\n      this.highlightedArea = this.gridRenderer.getNextPosition();\r\n    }\r\n  }\r\n\r\n  getNextPosition() {\r\n    return this.gridRenderer.getNextPosition();\r\n  }\r\n\r\n  getPositions() {\r\n    return this.grid.widgets;\r\n  }\r\n\r\n  resetHighlights() {\r\n    setTimeout(() => {\r\n      this.highlightedArea = null;\r\n      this._changeDetector.markForCheck();\r\n    });\r\n  }\r\n\r\n  emitUpdatePosition(widget: WidgetConfig) {\r\n    this.widgetPositionChange.emit({\r\n                                     index: this.getWidgetIndex(widget),\r\n                                     newPosition: new Rectangle(widget.position)\r\n                                   });\r\n  }\r\n\r\n  getWidgetIndex(widgetConfig: WidgetConfig) {\r\n    for (let i = this.grid.widgets.length - 1; i >= 0; i--) {\r\n      if (this.grid.widgets[i].id === widgetConfig.id) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  getWidgetById(widgetId: string): NgxWidgetComponent {\r\n    return this.widgetComponents.find(widgetCmp => {\r\n      return widgetCmp.getConfig().id === widgetId;\r\n    }) || null;\r\n  }\r\n\r\n  assessAvailableGridSpace() {\r\n    const gridHasSpaceLeft = this.gridRenderer.hasSpaceLeft();\r\n    if (this.gridAlreadyFull) {\r\n      if (gridHasSpaceLeft) {\r\n        this.gridFull.emit(false);\r\n        this.gridAlreadyFull = false;\r\n      } else {\r\n        /*No change to grid status. was and still is full*/\r\n      }\r\n    } else {\r\n      if (!gridHasSpaceLeft) {\r\n        this.gridFull.emit(true);\r\n        this.gridAlreadyFull = true;\r\n      } else {\r\n        /*No change to grid status. had and still has available space*/\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Utils } from '../../Utils';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\nimport { GridRenderer } from '../../models/GridRenderer.model';\r\nimport { Rectangle } from '../../models/Rectangle.model';\r\n\r\n@Component({\r\n             selector: 'ngx-grid-overlay',\r\n             styleUrls: ['./gridOverlay.component.scss'],\r\n             templateUrl: './gridOverlay.component.html',\r\n             changeDetection: ChangeDetectionStrategy.OnPush\r\n           })\r\nexport class NgxGridOverlayComponent {\r\n\r\n  public activeHighlight: any = null;\r\n  public gridRows: { y: SafeStyle; height: SafeStyle; }[] = [];\r\n  public gridCols: { x: SafeStyle; width: SafeStyle; }[] = [];\r\n  public _renderer: GridRenderer;\r\n  public _highlight?: Rectangle;\r\n  public _showGrid = false;\r\n\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n\r\n\r\n  get renderer(): GridRenderer {\r\n    return this._renderer;\r\n  }\r\n\r\n  @Input()\r\n  set renderer(renderer: GridRenderer) {\r\n    this._renderer = renderer;\r\n    if (Utils.isDefined(renderer)) {\r\n      this.updateGridLines(renderer, this.showGrid);\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set rows(rows: number) {\r\n    this.updateGridLines(this.renderer, this.showGrid);\r\n  }\r\n\r\n  @Input()\r\n  set cols(rows: number) {\r\n    this.updateGridLines(this.renderer, this.showGrid);\r\n  }\r\n\r\n\r\n  get highlight() {\r\n    return this._highlight;\r\n  }\r\n\r\n  @Input()\r\n  set highlight(highlight) {\r\n    this._highlight = highlight;\r\n    this.clearHighlight();\r\n    if (highlight) {\r\n      this.highlightArea(highlight, this.renderer);\r\n    }\r\n  }\r\n\r\n\r\n  get showGrid() {\r\n    return this._showGrid;\r\n  }\r\n\r\n  @Input()\r\n  set showGrid(showGrid: boolean) {\r\n    this._showGrid = showGrid;\r\n    this.updateGridLines(this.renderer, showGrid);\r\n  }\r\n\r\n  updateGridLines(renderer: GridRenderer, showGrid: boolean): void {\r\n    this.clearGridLines();\r\n    if (showGrid) {\r\n      this.showGridLines(renderer);\r\n    }\r\n  }\r\n\r\n  clearHighlight(): void {\r\n    this.activeHighlight = null;\r\n  }\r\n\r\n  clearGridLines(): void {\r\n    this.gridRows.splice(0);\r\n    this.gridCols.splice(0);\r\n  }\r\n\r\n  highlightArea(area: Rectangle, renderer: GridRenderer): void {\r\n    const cellSize = renderer.grid.cellSize;\r\n    const cellHeight = cellSize.height;\r\n    const cellWidth = cellSize.width;\r\n\r\n    this.activeHighlight = {\r\n      x: (area.left - 1) * cellWidth + '%',\r\n      y: (area.top - 1) * cellHeight + '%',\r\n      height: area.height * cellHeight + '%',\r\n      width: area.width * cellWidth + '%'\r\n    };\r\n    this.sanitizer.bypassSecurityTrustStyle(this.activeHighlight);\r\n  }\r\n\r\n  showGridLines(renderer: GridRenderer): void {\r\n    const cellHeight = renderer.grid.cellSize.height;\r\n    const cellWidth = renderer.grid.cellSize.width;\r\n    const height = cellHeight + '%';\r\n    const width = cellWidth + '%';\r\n    const rows = renderer.grid.rows;\r\n    const cols = renderer.grid.columns;\r\n    for (let i = 1; i < rows; i += 2) {\r\n      let y: string, h: string, row: { y: SafeStyle, height: SafeStyle };\r\n      y = (i * cellHeight) + '%';\r\n      h = 'calc(' + height + ' - 1px)';\r\n      row = {\r\n        y: this.sanitizer.bypassSecurityTrustStyle(y),\r\n        height: this.sanitizer.bypassSecurityTrustStyle(h)\r\n      };\r\n      this.gridRows.push(row);\r\n    }\r\n\r\n    for (let i = 1; i < cols; i += 2) {\r\n      let x: string, w: string, col: { x: SafeStyle, width: SafeStyle };\r\n      x = (i * cellWidth) + '%';\r\n      w = 'calc(' + width + ' - 1px)';\r\n      col = {\r\n        x: this.sanitizer.bypassSecurityTrustStyle(x),\r\n        width: this.sanitizer.bypassSecurityTrustStyle(w)\r\n      };\r\n      this.gridCols.push(col);\r\n    }\r\n  }\r\n}\r\n","import { Cell } from './Cell.model';\r\nimport { Rectangle } from './Rectangle.model';\r\n\r\nexport class PathIterator {\r\n  private _start: Rectangle;\r\n  private _heightDelta: number;\r\n  private _widthDelta: number;\r\n  private _steps: number;\r\n  private _currStep: number;\r\n  private _currPos: Cell = null;\r\n  private _nextPos: Cell = null;\r\n\r\n  constructor(start: Rectangle, end: Rectangle) {\r\n    if (!start) {\r\n      console.error('Start not present for Path Iterator');\r\n      return;\r\n    }\r\n    if (!end) {\r\n      console.error('End not present for Path Iterator');\r\n      return;\r\n    }\r\n    this._start = start;\r\n    this._heightDelta = end.top - start.top;\r\n    this._widthDelta = end.left - start.left;\r\n    this._steps = Math.max(Math.abs(this._heightDelta), Math.abs(this._widthDelta));\r\n    this._currStep = 0;\r\n    this._currPos = null;\r\n    this._nextPos = new Cell(start.top, start.left);\r\n  }\r\n\r\n  public next(): Cell {\r\n    this._currPos = this._nextPos;\r\n\r\n    if (this._currStep < this._steps) {\r\n      this._currStep++;\r\n      const currTopDelta = Math.round((this._currStep / this._steps) * this._heightDelta);\r\n      const currLeftDelta = Math.round((this._currStep / this._steps) * this._widthDelta);\r\n      this._nextPos = new Cell(this._start.top + currTopDelta, this._start.left + currLeftDelta);\r\n    } else {\r\n      this._nextPos = null;\r\n    }\r\n\r\n    return this._currPos;\r\n  }\r\n\r\n  public hasNext(): boolean {\r\n    return this._nextPos !== null;\r\n  }\r\n}\r\n","import { Directive, ElementRef, forwardRef, HostListener, Inject, Input, Renderer2 } from '@angular/core';\r\nimport { NgxWidgetGridComponent } from '../components/grid/grid.component';\r\nimport { Rectangle } from '../models/Rectangle.model';\r\nimport { NgxWidgetComponent } from '../components/widget/widget.component';\r\nimport { PathIterator } from '../models/PathIterator.model';\r\n\r\nexport interface RectanglePixels {\r\n  top: number;\r\n  left: number;\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\n@Directive({\r\n             selector: '[ngxWidgetMover]'\r\n           })\r\nexport class NgxWidgetMoverDirective {\r\n\r\n  public cellHeight: number;\r\n  public cellWidth: number;\r\n  public startRender: RectanglePixels;\r\n  public gridPositions: Rectangle;\r\n  public moverOffset: Rectangle;\r\n  public desiredPosition: any;\r\n  public startPosition: Rectangle;\r\n  public enableDrag: string = null;\r\n  private _onMoveListener = this.onMove.bind(this);\r\n  private _onUpListener = this.onUp.bind(this);\r\n\r\n  @Input()\r\n  public ngxWidgetMover = false;\r\n\r\n  constructor(private el: ElementRef,\r\n              private renderer: Renderer2,\r\n              @Inject(forwardRef(() => NgxWidgetGridComponent))\r\n              private gridCmp: NgxWidgetGridComponent,\r\n              @Inject(forwardRef(() => NgxWidgetComponent))\r\n              private widgetCmp: NgxWidgetComponent) {\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event'])\r\n  @HostListener('pointerdown', ['$event'])\r\n  onDown(event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.renderer.addClass(this.widgetCmp.getEl().nativeElement, 'wg-moving');\r\n    const widgetContainer = this.widgetCmp.getEl().nativeElement;\r\n\r\n    this.startPosition = this.gridCmp.getWidgetPosition(this.widgetCmp);\r\n\r\n    this.startRender = {\r\n      top: widgetContainer.offsetTop,\r\n      left: widgetContainer.offsetLeft,\r\n      height: widgetContainer.clientHeight,\r\n      width: widgetContainer.clientWidth\r\n    }; // pixel values\r\n\r\n    const eventOffsetX = event.offsetX || event.layerX;\r\n    const eventOffsetY = event.offsetY || event.layerY;\r\n\r\n    this.desiredPosition = {top: this.startRender.top, left: this.startRender.left};\r\n\r\n    this.moverOffset = new Rectangle({\r\n                                       top: eventOffsetY + this.el.nativeElement.offsetTop || 0,\r\n                                       left: eventOffsetX + this.el.nativeElement.offsetLeft || 0\r\n                                     });\r\n\r\n    this.gridPositions = this.gridCmp.getGridRectangle();\r\n    this.cellHeight = (this.gridCmp.grid.cellSize.height / 100) * this.gridPositions.height;\r\n    this.cellWidth = (this.gridCmp.grid.cellSize.width / 100) * this.gridPositions.width;\r\n    this.enableDrag = this.widgetCmp.getConfig().id;\r\n\r\n    this.renderer.setStyle(this.widgetCmp.getEl().nativeElement, 'z-index', this.ngxWidgetMover ? 0 : 100);\r\n\r\n    if (typeof PointerEvent !== 'undefined') {\r\n      window.addEventListener('pointermove', this._onMoveListener);\r\n      window.addEventListener('pointerup', this._onUpListener);\r\n    } else {\r\n      window.addEventListener('mousemove', this._onMoveListener);\r\n      window.addEventListener('mouseup', this._onUpListener);\r\n    }\r\n  }\r\n\r\n  onMove(event: MouseEvent) {\r\n    if (this.enableDrag === this.widgetCmp.getConfig().id) {\r\n      event.preventDefault();\r\n      const eventClientX = event.clientX;\r\n      const eventClientY = event.clientY;\r\n      const startRender = this.startRender;\r\n      const gridDimensions = this.gridPositions;\r\n      const desiredPosition = this.desiredPosition;\r\n      // normalize the drag position\r\n      const dragPositionX = Math.round(eventClientX) - gridDimensions.left,\r\n        dragPositionY = Math.round(eventClientY) - gridDimensions.top;\r\n\r\n      desiredPosition.top = Math.min(\r\n        Math.max(dragPositionY - this.moverOffset.top, 0),\r\n        gridDimensions.height - startRender.height - 1\r\n      );\r\n      desiredPosition.left = Math.min(\r\n        Math.max(dragPositionX - this.moverOffset.left, 0),\r\n        gridDimensions.width - startRender.width - 1\r\n      );\r\n      const currentFinalPos: Rectangle = this.determineFinalPos(this.startPosition,\r\n                                                                desiredPosition,\r\n                                                                this.startRender,\r\n                                                                this.cellHeight,\r\n                                                                this.cellWidth);\r\n      this.gridCmp.highlightArea(currentFinalPos);\r\n\r\n      this.renderer.setStyle(this.widgetCmp.getEl().nativeElement, 'top', desiredPosition.top + 'px');\r\n      this.renderer.setStyle(this.widgetCmp.getEl().nativeElement, 'left', desiredPosition.left + 'px');\r\n    }\r\n  }\r\n\r\n  onUp(event: MouseEvent) {\r\n    if (this.enableDrag === this.widgetCmp.getConfig().id) {\r\n      event.preventDefault();\r\n      const eventClientX = event.clientX;\r\n      const eventClientY = event.clientY;\r\n      const startRender = this.startRender;\r\n      const gridDimensions = this.gridPositions;\r\n      const desiredPosition = this.desiredPosition;\r\n      // normalize the drag position\r\n      const dragPositionX = Math.round(eventClientX) - gridDimensions.left,\r\n        dragPositionY = Math.round(eventClientY) - gridDimensions.top;\r\n\r\n      desiredPosition.top = Math.min(\r\n        Math.max(dragPositionY - this.moverOffset.top, 0),\r\n        gridDimensions.height - startRender.height - 1\r\n      );\r\n      desiredPosition.left = Math.min(\r\n        Math.max(dragPositionX - this.moverOffset.left, 0),\r\n        gridDimensions.width - startRender.width - 1\r\n      );\r\n      const anchorTop = this.getAnchor(Math.max(dragPositionY, 0), this.cellHeight, 1);\r\n      const anchorLeft = this.getAnchor(Math.max(dragPositionX, 0), this.cellWidth, 1);\r\n      const dropPosition: any = this.gridCmp.rasterizeCoords(anchorLeft, anchorTop);\r\n      const obstructingWidgetId = this.gridCmp.areaObstructor(dropPosition);\r\n      let finalPos;\r\n      if (obstructingWidgetId && this.ngxWidgetMover) {\r\n        const obstructingWidgetCmp: NgxWidgetComponent = this.gridCmp.getWidgetById(obstructingWidgetId);\r\n        const obstructingWidgetPosition = this.gridCmp.getWidgetPositionByWidgetId(obstructingWidgetId);\r\n        const draggedWidgetPosition = this.widgetCmp.position;\r\n        this.widgetCmp.position = obstructingWidgetPosition;\r\n        this.gridCmp.updateWidget(this.widgetCmp, true);\r\n        obstructingWidgetCmp.position = draggedWidgetPosition;\r\n        this.gridCmp.updateWidget(obstructingWidgetCmp, true);\r\n      } else {\r\n        finalPos = this.determineFinalPos(this.startPosition,\r\n                                          desiredPosition,\r\n                                          this.startRender,\r\n                                          this.cellHeight,\r\n                                          this.cellWidth);\r\n        this.widgetCmp.position = finalPos;\r\n        this.gridCmp.updateWidget(this.widgetCmp, false);\r\n      }\r\n      this.gridCmp.resetHighlights();\r\n      this.renderer.removeClass(this.widgetCmp.getEl().nativeElement, 'wg-moving');\r\n      this.renderer.removeStyle(this.widgetCmp.getEl().nativeElement, 'z-index');\r\n      this.enableDrag = null;\r\n    }\r\n    if (typeof PointerEvent !== 'undefined') {\r\n      window.removeEventListener('pointermove', this._onMoveListener);\r\n      window.removeEventListener('pointerup', this._onUpListener);\r\n    } else {\r\n      window.removeEventListener('mousemove', this._onMoveListener);\r\n      window.removeEventListener('mouseup', this._onUpListener);\r\n    }\r\n  }\r\n\r\n  getAnchor(val: number, cellWOrH: number, marginFactor = 2): number {\r\n    return (val % cellWOrH) > (cellWOrH / marginFactor) ? val + Math.floor(cellWOrH) : val;\r\n  }\r\n\r\n  determineFinalPos(startPos: Rectangle, desiredPos: Rectangle, startRender: RectanglePixels,\r\n                    cellHt: number, cellWd: number): Rectangle {\r\n    if (startRender.top === desiredPos.top && startRender.left === desiredPos.left) {\r\n      return startPos;\r\n    }\r\n\r\n    const anchorTop = this.getAnchor(desiredPos.top, cellHt);\r\n    const anchorLeft = this.getAnchor(desiredPos.left, cellWd);\r\n    const movedDown = anchorTop >= startRender.top;\r\n    const movedRight = anchorLeft >= startRender.left;\r\n    const desiredFinalPosition: any = this.gridCmp.rasterizeCoords(anchorLeft, anchorTop);\r\n    const path = new PathIterator(desiredFinalPosition, startPos);\r\n    while (path && path.hasNext()) {\r\n      const currPos = path.next();\r\n\r\n      const targetArea = new Rectangle({\r\n                                         top: currPos.top,\r\n                                         left: currPos.left,\r\n                                         height: startPos.height,\r\n                                         width: startPos.width\r\n                                       });\r\n\r\n      const options = {\r\n        excludedArea: startPos,\r\n        fromBottom: movedDown,\r\n        fromRight: movedRight\r\n      };\r\n      // If widget swap is enabled and area is obstructed, show original position\r\n      if (this.ngxWidgetMover && this.gridCmp.isAreaObstructed(targetArea, options)) {\r\n        return new Rectangle(startPos);\r\n      }\r\n      if (!this.gridCmp.isAreaObstructed(targetArea, options)) {\r\n        // try to get closer to the desired position by leaving the original path\r\n        const height = targetArea.height;\r\n        const width = targetArea.width;\r\n        if (desiredFinalPosition.top < targetArea.top) {\r\n          while (desiredFinalPosition.top <= (targetArea.top - 1)) {\r\n            const checkRect = new Rectangle({top: targetArea.top - 1, left: targetArea.left, height, width});\r\n            const isRectVacant = !this.gridCmp.isAreaObstructed(checkRect, options);\r\n            if (isRectVacant) {\r\n              targetArea.top--;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        } else if (desiredFinalPosition.top > targetArea.top) {\r\n          while (desiredFinalPosition.top >= (targetArea.top + 1)) {\r\n            const checkRect = new Rectangle({top: targetArea.top + 1, left: targetArea.left, height, width});\r\n            const isRectVacant = !this.gridCmp.isAreaObstructed(checkRect, options);\r\n            if (isRectVacant) {\r\n              targetArea.top++;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (desiredFinalPosition.left < targetArea.left) {\r\n          while (desiredFinalPosition.left <= (targetArea.left - 1)) {\r\n            const checkRect = new Rectangle({top: targetArea.top, left: targetArea.left - 1, height, width});\r\n            const isRectVacant = !this.gridCmp.isAreaObstructed(checkRect, options);\r\n            if (isRectVacant) {\r\n              targetArea.left--;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        } else if (desiredFinalPosition.left > targetArea.left) {\r\n          while (desiredFinalPosition.left >= (targetArea.left + 1)) {\r\n            const checkRect = new Rectangle({top: targetArea.top, left: targetArea.left + 1, height, width});\r\n            const isRectVacant = !this.gridCmp.isAreaObstructed(checkRect, options);\r\n            if (isRectVacant) {\r\n              targetArea.left++;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        return new Rectangle(targetArea);\r\n      }\r\n    }\r\n    return new Rectangle(startPos);\r\n  }\r\n}\r\n","import { Directive, ElementRef, forwardRef, HostListener, Inject, Input, Renderer2 } from '@angular/core';\r\nimport { NgxWidgetGridComponent } from '../components/grid/grid.component';\r\nimport { NgxWidgetComponent } from '../components/widget/widget.component';\r\nimport { Rectangle } from '../models/Rectangle.model';\r\nimport { RESIZE_DIRECTIONS } from '../Utils';\r\n\r\nconst MIN_HEIGHT = 42;\r\nconst MIN_WIDTH = 42;\r\n\r\n@Directive({\r\n             selector: '[ngxWidgetResizer]'\r\n           })\r\nexport class NgxWidgetResizerDirective {\r\n\r\n  public moveUpAllowed = false;\r\n  public moveDownAllowed = false;\r\n  public moveLeftAllowed = false;\r\n  public moveRightAllowed = false;\r\n  public parentContainer: any;\r\n  public startRender: any;\r\n  public gridPositions: Rectangle;\r\n  public delta: { top: number, right: number, bottom: number, left: number };\r\n  public draggerOffset: { top: number, right: number, bottom: number, left: number };\r\n  public startPosition: Rectangle;\r\n  public enableDrag: string = null;\r\n  public _resizeDirection: string;\r\n  private _onMoveListener = this.onMove.bind(this);\r\n  private _onUpListener = this.onUp.bind(this);\r\n\r\n  constructor(private el: ElementRef,\r\n              private renderer: Renderer2,\r\n              @Inject(forwardRef(() => NgxWidgetGridComponent))\r\n              private gridCmp: NgxWidgetGridComponent,\r\n              @Inject(forwardRef(() => NgxWidgetComponent))\r\n              private widgetCmp: NgxWidgetComponent) {\r\n    this.parentContainer = this.el.nativeElement.parentElement;\r\n  }\r\n\r\n  public get resizeDirection() {\r\n    return this._resizeDirection;\r\n  }\r\n\r\n  @Input()\r\n  public set ngxWidgetResizer(dir: string) {\r\n    this._resizeDirection = dir;\r\n    this.moveUpAllowed = false;\r\n    this.moveDownAllowed = false;\r\n    this.moveLeftAllowed = false;\r\n    this.moveRightAllowed = false;\r\n    switch (dir) {\r\n      case RESIZE_DIRECTIONS.top:\r\n        this.moveUpAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.left:\r\n        this.moveLeftAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.bottom:\r\n        this.moveDownAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.right:\r\n        this.moveRightAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.topLeft:\r\n        this.moveUpAllowed = true;\r\n        this.moveLeftAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.topRight:\r\n        this.moveUpAllowed = true;\r\n        this.moveRightAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.bottomLeft:\r\n        this.moveDownAllowed = true;\r\n        this.moveLeftAllowed = true;\r\n        break;\r\n      case RESIZE_DIRECTIONS.bottomRight:\r\n        this.moveDownAllowed = true;\r\n        this.moveRightAllowed = true;\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  @HostListener('pointerdown', ['$event'])\r\n  @HostListener('mousedown', ['$event'])\r\n  onDown(event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.enableDrag = this.widgetCmp.getConfig().id;\r\n    this.renderer.addClass(this.widgetCmp.getEl().nativeElement, 'wg-resizing');\r\n    this.renderer.addClass(this.el.nativeElement, 'dragging');\r\n    this.startPosition = this.gridCmp.getWidgetPosition(this.widgetCmp);\r\n\r\n    this.startRender = {\r\n      top: Math.ceil(this.widgetCmp.getEl().nativeElement.offsetTop),\r\n      left: Math.ceil(this.widgetCmp.getEl().nativeElement.offsetLeft),\r\n      height: Math.floor(this.parentContainer.offsetHeight),\r\n      width: Math.floor(this.parentContainer.offsetWidth)\r\n    }; // pixel values\r\n    this.startRender.bottom = this.startRender.top + this.startRender.height;\r\n    this.startRender.right = this.startRender.left + this.startRender.width;\r\n\r\n    const eventOffsetX = event.offsetX || event.layerX;\r\n    const eventOffsetY = event.offsetY || event.layerY;\r\n\r\n    this.delta = {top: 0, right: 0, bottom: 0, left: 0};\r\n    this.draggerOffset = {\r\n      top: eventOffsetY,\r\n      left: eventOffsetX,\r\n      bottom: eventOffsetY - this.el.nativeElement.offsetHeight,\r\n      right: eventOffsetX - this.el.nativeElement.offsetWidth\r\n    };\r\n\r\n    this.gridPositions = this.gridCmp.getGridRectangle();\r\n    if (typeof PointerEvent !== 'undefined') {\r\n      window.addEventListener('pointermove', this._onMoveListener);\r\n      window.addEventListener('pointerup', this._onUpListener);\r\n    } else {\r\n      window.addEventListener('mousemove', this._onMoveListener);\r\n      window.addEventListener('mouseup', this._onUpListener);\r\n    }\r\n  }\r\n\r\n  onMove(event: MouseEvent) {\r\n    if (this.enableDrag === this.widgetCmp.getConfig().id) {\r\n      event.preventDefault();\r\n      const eventClientX = event.clientX;\r\n      const eventClientY = event.clientY;\r\n      const gridDims = this.gridPositions;\r\n      const startRender = this.startRender;\r\n      // normalize the drag position\r\n      const dragPositionX = Math.round(eventClientX) - gridDims.left;\r\n      const dragPositionY = Math.round(eventClientY) - gridDims.top;\r\n      const delta = this.delta;\r\n      if (this.moveUpAllowed) {\r\n        delta.top = Math.min(Math.max(dragPositionY - this.draggerOffset.top, 0), gridDims.height) - startRender.top;\r\n        delta.top = Math.min(delta.top, startRender.height - MIN_HEIGHT);\r\n      } else if (this.moveDownAllowed) {\r\n        delta.bottom = startRender.bottom - Math.min(Math.max(dragPositionY - this.draggerOffset.bottom, 0), gridDims.height);\r\n        delta.bottom = Math.min(delta.bottom, startRender.height - MIN_HEIGHT);\r\n      }\r\n\r\n      if (this.moveLeftAllowed) {\r\n        delta.left = Math.min(Math.max(dragPositionX - this.draggerOffset.left, 0), gridDims.width) - startRender.left;\r\n        delta.left = Math.min(delta.left, startRender.width - MIN_WIDTH);\r\n      } else if (this.moveRightAllowed) {\r\n        delta.right = startRender.right - Math.min(Math.max(dragPositionX - this.draggerOffset.right, 0), gridDims.width);\r\n        delta.right = Math.min(delta.right, startRender.width - MIN_WIDTH);\r\n      }\r\n\r\n      const currentFinalPos = this.determineFinalPos();\r\n      this.gridCmp.highlightArea(currentFinalPos);\r\n\r\n      this.renderer.setStyle(this.parentContainer, 'top', this.delta.top + 'px');\r\n      this.renderer.setStyle(this.parentContainer, 'left', this.delta.left + 'px');\r\n      this.renderer.setStyle(this.parentContainer, 'bottom', this.delta.bottom + 'px');\r\n      this.renderer.setStyle(this.parentContainer, 'right', this.delta.right + 'px');\r\n    }\r\n  }\r\n\r\n  onUp(event: MouseEvent) {\r\n    if (this.enableDrag === this.widgetCmp.getConfig().id) {\r\n      event.preventDefault();\r\n      this.el.nativeElement.setAttribute('draggable', false);\r\n      this.renderer.removeClass(this.el.nativeElement, 'dragging');\r\n      this.renderer.removeClass(this.widgetCmp.getEl().nativeElement, 'wg-resizing');\r\n      this.enableDrag = null;\r\n      this.widgetCmp.position = this.determineFinalPos();\r\n      this.gridCmp.updateWidget(this.widgetCmp, false);\r\n      this.gridCmp.resetHighlights();\r\n\r\n      // reset style\r\n      this.renderer.removeClass(this.widgetCmp.getEl().nativeElement, 'wg-resizing');\r\n      this.renderer.removeClass(this.el.nativeElement, 'dragging');\r\n      this.renderer.setStyle(this.parentContainer, 'top', '');\r\n      this.renderer.setStyle(this.parentContainer, 'left', '');\r\n      this.renderer.setStyle(this.parentContainer, 'bottom', '');\r\n      this.renderer.setStyle(this.parentContainer, 'right', '');\r\n    }\r\n    if (typeof PointerEvent !== 'undefined') {\r\n      window.removeEventListener('pointermove', this._onMoveListener);\r\n      window.removeEventListener('pointerup', this._onUpListener);\r\n    } else {\r\n      window.removeEventListener('mousemove', this._onMoveListener);\r\n      window.removeEventListener('mouseup', this._onUpListener);\r\n    }\r\n  }\r\n\r\n  findCollision(start: number, end: number, val: number, reverse = false): boolean {\r\n    let foundCollision = false;\r\n    for (let i = start; i <= end; i++) {\r\n      const checker = reverse ? this.gridCmp.isPointObstructed(i, val) : this.gridCmp.isPointObstructed(val, i);\r\n      if (checker) {\r\n        foundCollision = true;\r\n        break;\r\n      }\r\n    }\r\n    return foundCollision;\r\n  }\r\n\r\n  determineFinalPos(): any {\r\n    const finalPos: Rectangle = new Rectangle();\r\n    const startRender = this.startRender;\r\n    const delta = this.delta;\r\n    const requestedStartPoint = this.gridCmp.rasterizeCoords(startRender.left + delta.left + 1, startRender.top + delta.top + 1);\r\n    const requestedEndPoint = this.gridCmp.rasterizeCoords(startRender.right - delta.right - 1, startRender.bottom - delta.bottom - 1);\r\n\r\n    const requestedPos = {\r\n      top: requestedStartPoint.top,\r\n      left: requestedStartPoint.left,\r\n      right: requestedEndPoint.left,\r\n      bottom: requestedEndPoint.top\r\n    };\r\n    // determine a suitable final position (one that is not obstructed)\r\n    let foundCollision;\r\n    const start = Math.max(this.startPosition.left, requestedPos.left);\r\n    const end = Math.min(this.startPosition.right, requestedPos.right);\r\n    if (this.moveUpAllowed && requestedPos.top < this.startPosition.top) {\r\n      finalPos.top = this.startPosition.top;\r\n\r\n      while (finalPos.top > requestedPos.top) {\r\n        // check whether adding another row above would cause any conflict\r\n        foundCollision = this.findCollision(start, end, finalPos.top - 1);\r\n        if (foundCollision) {\r\n          break;\r\n        }\r\n        finalPos.top--; // add row above\r\n      }\r\n    } else if (this.moveDownAllowed && requestedPos.bottom > this.startPosition.bottom) {\r\n      finalPos.top = finalPos.top || requestedPos.top;\r\n      finalPos.height = this.startPosition.bottom + 1 - this.startPosition.top;\r\n      while (finalPos.bottom < requestedPos.bottom) {\r\n        // check whether adding another row below would cause any conflict\r\n        foundCollision = this.findCollision(start, end, finalPos.bottom + 1);\r\n        if (foundCollision) {\r\n          break;\r\n        }\r\n        finalPos.height++; // add row below\r\n      }\r\n    }\r\n\r\n    finalPos.top = finalPos.top || requestedPos.top;\r\n    finalPos.height = finalPos.height || requestedPos.bottom + 1 - finalPos.top;\r\n\r\n    if (this.moveLeftAllowed && requestedPos.left < this.startPosition.left) {\r\n      finalPos.left = this.startPosition.left;\r\n\r\n      while (finalPos.left > requestedPos.left) {\r\n        // check whether adding another column would cause any conflict\r\n        foundCollision = this.findCollision(finalPos.top, finalPos.bottom, finalPos.left - 1, true);\r\n        if (foundCollision) {\r\n          break;\r\n        }\r\n\r\n        finalPos.left--; // add column\r\n      }\r\n    } else if (this.moveRightAllowed && requestedPos.right > this.startPosition.right) {\r\n      finalPos.left = finalPos.left || requestedPos.left;\r\n      finalPos.width = this.startPosition.right + 1 - this.startPosition.left;\r\n      while (finalPos.right < requestedPos.right) {\r\n        foundCollision = this.findCollision(finalPos.top, finalPos.bottom, finalPos.right + 1, true);\r\n        if (foundCollision) {\r\n          break;\r\n        }\r\n\r\n        finalPos.width++;\r\n      }\r\n    }\r\n\r\n    finalPos.left = finalPos.left || requestedPos.left;\r\n    finalPos.width = finalPos.width || requestedPos.right + 1 - finalPos.left;\r\n    return finalPos;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxGridOverlayComponent } from './components/gridOverlay/gridOverlay.component';\r\nimport { NgxWidgetComponent } from './components/widget/widget.component';\r\nimport { NgxWidgetGridComponent } from './components/grid/grid.component';\r\nimport { NgxWidgetMoverDirective } from './directives/widgetMover.directive';\r\nimport { NgxWidgetResizerDirective } from './directives/widgetResizer.directive';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n            imports: [\r\n              CommonModule\r\n            ],\r\n            declarations: [\r\n              NgxGridOverlayComponent,\r\n              NgxWidgetComponent,\r\n              NgxWidgetGridComponent,\r\n              NgxWidgetMoverDirective,\r\n              NgxWidgetResizerDirective\r\n            ],\r\n            exports: [\r\n              NgxWidgetComponent,\r\n              NgxWidgetGridComponent\r\n            ]\r\n          })\r\nexport class NgxWidgetGridModule {}\r\n"],"names":["EventEmitter","Component","ChangeDetectionStrategy","ElementRef","Input","Output","tslib_1.__values","ChangeDetectorRef","Renderer2","ContentChildren","DomSanitizer","Directive","Inject","forwardRef","HostListener","NgModule","CommonModule"],"mappings":"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"}
